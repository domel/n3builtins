@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix fnon: <https://w3id.org/function/ontology/n3#> .

list:member a fno:Function ;
    vs:term_status  "testing" ;
    fnon:tldr "Checks whether the subject list contains the object." ;
    dcterms:comment """`true` if and only `$s` is a list and `o` is a member of that list.""" ;
    rdfs:seeAlso list:in , list:memberAt ;
    fno:example ( 
            [ a fno:Test ;
                dcterms:description """
Determine the members of the list ("dog" "penguin" "cat").
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/>.
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

{ ("dog" "penguin" "cat") list:member ?member . } => { :result :is ?member . } .
            """ ;
                fno:result """
@prefix : <http://example.org/>.
:result :is "dog".
:result :is "penguin".
:result :is "cat".
            """ 
           ] 

           [ a fno:Test ;
                dcterms:description """
Is "cat" a member of the list ("dog" "penguin" "cat")?
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/>.
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

:let :param ("dog" "penguin" "cat") .

{ 
    :let :param ?param .
    ?param list:member "cat" . 
} 
=> 
{ 
    :result :is true . 
} .
            """ ;
                fno:result """
@prefix : <http://example.org/>.
:result :is true.
            """ 
          ] 

    ) ;
    fno:name "member" ;
    fno:parameter (
        [ a fno:Parameter ;
            dcterms:description "" ;
            fno:mode "+" ;
            fno:predicate "$s" ;
            fno:type rdf:List ;
            fnon:position fnon:subject ;
        ] [ a fno:Parameter ;
            fno:predicate "$o" ;
            fno:mode "-[*]" ;
            fnon:position fnon:object
        ] ) .
