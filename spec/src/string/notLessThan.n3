@prefix fnon: <https://w3id.org/function/ontology/n3#> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

string:notLessThan a fno:Function ;
    vs:term_status  "testing" ;
    fnon:tldr """Checks whether the subject string is not less than the object string, according to Unicode code order.
You can use this as an equivalent of a greaterThanOrEqual operator.""" ;
    dcterms:comment "`true` if and only if `$s` is not less than `$o` as per the Unicode code order." ;
    fno:example ( 
              [ a fno:Test ;
                dcterms:description """
Checks whether the string "Penguin" is not less than the string "Cat" .
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/>.
@prefix string: <http://www.w3.org/2000/10/swap/string#> .

:Let :param1 "Penguin".
:Let :param2 "Cat" .
{
    :Let :param1 ?param1 .
    :Let :param2 ?param2 .
    ?param1 string:notLessThan ?param2 .
}
=>
{
    :result :is true .
} .
            """ ;
                fno:result """
@prefix : <http://example.org/>.
:result :is true . 
            """ 
            ]
    ) ;
    fno:name "notLessThan" ;
    rdfs:seeAlso string:lessThan ;
    fno:parameter ( [
       a fno:Parameter ;
       fno:predicate "$s" ;
       fno:mode "+" ;
       fnon:position fnon:subject ;
       fno:type xsd:string 
    ] [
       a fno:Parameter ;
       fno:predicate "$o" ;
       fno:mode "+" ;
       fnon:position fnon:object ;
       fno:type xsd:string 
    ] ) .
