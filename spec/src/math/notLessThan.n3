@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix fnon: <https://w3id.org/function/ontology/n3#> .

math:notLessThan a fno:Function ;
    vs:term_status  "testing" ;
    fnon:tldr """Checks whether the subject is a number that is not less than the object.
You can use this as an equivalent of a greaterThanOrEqual operator.""" ;
    dcterms:description """`true` if and only if `$s` is a number that is not less than `$o`.""" ;
    rdfs:seeAlso math:lessThan ;
    fno:example ( [ a fno:Test ;
                dcterms:description """
Check if 42 is not less than 41 .
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/>.
@prefix math: <http://www.w3.org/2000/10/swap/math#> .

:Let :param (42 41) .

{
    :Let :param (?X ?Y) .
    ?X math:notLessThan ?Y .
}
=>
{
    :result :is true .
} .
            """ ;
                fno:result """
@prefix : <http://example.org/>.
:result :is true .
            """ ] ) ;
    fno:name "notlessThan" ;
    fno:parameter (
        [ a fno:Parameter ;
            fno:predicate "$s" ;
            fno:mode "+" ;
            fnon:position fnon:subject ;
            fno:type 
                [   rdf:type rdfs:Datatype ;
                    owl:unionOf ( xsd:decimal xsd:double xsd:float )
                ]
        ] [ a fno:Parameter ;
            fno:predicate "$o" ;
            fno:mode "+" ;
            fnon:position fnon:object ;
            fno:type 
                [   rdf:type rdfs:Datatype ;
                    owl:unionOf ( xsd:decimal xsd:double xsd:float )
                ]
        ] ) .
