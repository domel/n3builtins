@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix fnon: <https://w3id.org/function/ontology/n3#> .

log:uri a fno:Function ;
    vs:term_status  "testing" ;
    fnon:tldr "Gets as object the string representation of the subject URI." ;
    dcterms:description "`true` if and only if `$o` is the string representation of `$s`." ;
    fnon:details """This allows one to look at the actual string of the URI which identifies this.
This is a level breaker, breaking the rule of not looking inside a URI.""" ;
    fno:example ( 
              [ a fno:Test ;
                dcterms:description """
Parse the URI `<https://www.w3.org>` into a string .
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/>.
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

{ <https://www.w3.org> log:uri ?uri . } => { :result :is ?uri . } .
            """ ;
                fno:result """
@prefix : <http://example.org/>.
:result :is "https://www.w3.org" .
            """ 
            ] 
    ) ;
    fno:name "uri" ;
    fno:parameter ( [
        a fno:Parameter ;
        dcterms:description "a URI" ;
        fno:mode "?" ;
        fno:predicate "$s" ;
        fnon:position fnon:subject
    ] [
        a fno:Parameter ;
        dcterms:description "" ;
        fno:mode "?" ;
        fno:predicate "$o" ;
        fno:type xsd:string ;
        fnon:position fnon:object
    ] ) .
