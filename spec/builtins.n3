@prefix crypto: <http://www.w3.org/2000/10/swap/crypto#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix fno: <https://w3id.org/function/ontology#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#>.
@prefix fnon: <https://w3id.org/function/ontology/n3#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix string: <http://www.w3.org/2000/10/swap/string#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.

crypto:sha a fno:Function.
_:bn_1 a fno:Test.
_:bn_2 a fno:Parameter.
_:bn_3 a fno:Parameter.
list:append a fno:Function.
_:bn_4 a fno:Test.
_:bn_5 a fno:Test.
_:bn_6 a fno:Test.
_:bn_7 a fno:Test.
_:bn_8 a fno:Parameter.
_:bn_10 a fno:Parameter.
list:first a fno:Function.
_:bn_11 a fno:Test.
_:bn_12 a fno:Parameter.
_:bn_13 a fno:Parameter.
list:in a fno:Function.
_:bn_14 a fno:Test.
_:bn_15 a fno:Test.
_:bn_16 a fno:Parameter.
_:bn_17 a fno:Parameter.
list:iterate a fno:Function.
_:bn_18 a fno:Test.
_:bn_19 a fno:Test.
_:bn_20 a fno:Test.
_:bn_21 a fno:Parameter.
_:bn_22 a fno:Parameter.
list:last a fno:Function.
_:bn_25 a fno:Test.
_:bn_26 a fno:Test.
_:bn_27 a fno:Parameter.
_:bn_28 a fno:Parameter.
list:length a fno:Function.
_:bn_29 a fno:Test.
_:bn_30 a fno:Parameter.
_:bn_31 a fno:Parameter.
list:member a fno:Function.
_:bn_32 a fno:Test.
_:bn_33 a fno:Test.
_:bn_34 a fno:Parameter.
_:bn_35 a fno:Parameter.
list:memberAt a fno:Function.
_:bn_36 a fno:Test.
_:bn_37 a fno:Test.
_:bn_38 a fno:Parameter.
_:bn_41 a fno:Parameter.
list:remove a fno:Function.
_:bn_42 a fno:Test.
_:bn_43 a fno:Parameter.
_:bn_46 a fno:Parameter.
log:conclusion a fno:Function.
_:bn_47 a fno:Test.
_:bn_48 a fno:Parameter.
_:bn_49 a fno:Parameter.
log:conjunction a fno:Function.
_:bn_50 a fno:Test.
_:bn_51 a fno:Parameter.
_:bn_53 a fno:Parameter.
log:content a fno:Function.
_:bn_54 a fno:Test.
_:bn_54 a fno:TestSkip.
_:bn_55 a fno:Parameter.
_:bn_56 a fno:Parameter.
log:dtlit a fno:Function.
_:bn_57 a fno:Test.
_:bn_58 a fno:Test.
_:bn_59 a fno:Parameter.
_:bn_62 a fno:Parameter.
log:equalTo a fno:Function.
_:bn_63 a fno:Test.
_:bn_64 a fno:Test.
_:bn_65 a fno:Test.
_:bn_66 a fno:Test.
_:bn_67 a fno:Test.
_:bn_68 a fno:Parameter.
_:bn_69 a fno:Parameter.
log:forAllIn a fno:Function.
_:bn_70 a fno:Test.
_:bn_71 a fno:Parameter.
_:bn_74 a fno:Parameter.
log:includes a fno:Function.
_:bn_75 a fno:Test.
_:bn_76 a fno:Parameter.
_:bn_77 a fno:Parameter.
log:notEqualTo a fno:Function.
_:bn_78 a fno:Test.
_:bn_79 a fno:Test.
_:bn_80 a fno:Test.
_:bn_81 a fno:Parameter.
_:bn_82 a fno:Parameter.
log:notIncludes a fno:Function.
_:bn_83 a fno:Test.
_:bn_84 a fno:Test.
_:bn_85 a fno:Parameter.
_:bn_86 a fno:Parameter.
log:outputString a fno:Function.
_:bn_87 a fno:Test.
_:bn_87 a fno:TestSkip.
_:bn_88 a fno:Parameter.
_:bn_89 a fno:Parameter.
log:parsedAsN3 a fno:Function.
_:bn_90 a fno:Test.
_:bn_91 a fno:Parameter.
_:bn_92 a fno:Parameter.
log:rawType a fno:Function.
_:bn_93 a fno:Test.
_:bn_94 a fno:Test.
_:bn_95 a fno:Test.
_:bn_96 a fno:Parameter.
_:bn_97 a fno:Parameter.
log:semantics a fno:Function.
_:bn_98 a fno:Test.
_:bn_98 a fno:TestSkip.
_:bn_99 a fno:Parameter.
_:bn_100 a fno:Parameter.
log:semanticsOrError a fno:Function.
_:bn_101 a fno:Test.
_:bn_101 a fno:TestSkip.
_:bn_102 a fno:Parameter.
_:bn_103 a fno:Parameter.
log:skolem a fno:Function.
_:bn_104 a fno:Test.
_:bn_104 a fno:TestSkip.
_:bn_105 a fno:Parameter.
_:bn_106 a fno:Parameter.
log:uri a fno:Function.
_:bn_107 a fno:Test.
_:bn_108 a fno:Parameter.
_:bn_109 a fno:Parameter.
log:langlit a fno:Function.
_:bn_110 a fno:Test.
_:bn_111 a fno:Parameter.
_:bn_114 a fno:Parameter.
math:absoluteValue a fno:Function.
_:bn_115 a fno:Test.
_:bn_116 a fno:Parameter.
_:bn_117 a rdfs:Datatype.
_:bn_118 a fno:Parameter.
_:bn_119 a rdfs:Datatype.
math:acos a fno:Function.
_:bn_120 a fno:Test.
_:bn_121 a fno:Parameter.
_:bn_122 a rdfs:Datatype.
_:bn_123 a fno:Parameter.
_:bn_124 a rdfs:Datatype.
math:asin a fno:Function.
_:bn_125 a fno:Test.
_:bn_126 a fno:Parameter.
_:bn_127 a rdfs:Datatype.
_:bn_128 a fno:Parameter.
_:bn_129 a rdfs:Datatype.
math:atan a fno:Function.
_:bn_130 a fno:Test.
_:bn_131 a fno:Parameter.
_:bn_132 a rdfs:Datatype.
_:bn_133 a fno:Parameter.
_:bn_134 a rdfs:Datatype.
math:cos a fno:Function.
_:bn_135 a fno:Test.
_:bn_136 a fno:Parameter.
_:bn_137 a rdfs:Datatype.
_:bn_138 a fno:Parameter.
_:bn_139 a rdfs:Datatype.
math:cosh a fno:Function.
_:bn_140 a fno:Test.
_:bn_141 a fno:Parameter.
_:bn_142 a rdfs:Datatype.
_:bn_143 a fno:Parameter.
_:bn_144 a rdfs:Datatype.
math:degrees a fno:Function.
_:bn_145 a fno:Test.
_:bn_146 a fno:Parameter.
_:bn_147 a rdfs:Datatype.
_:bn_148 a fno:Parameter.
_:bn_149 a rdfs:Datatype.
math:difference a fno:Function.
_:bn_150 a fno:Test.
_:bn_151 a fno:Parameter.
_:bn_153 a rdfs:Datatype.
_:bn_155 a rdfs:Datatype.
_:bn_156 a fno:Parameter.
_:bn_157 a rdfs:Datatype.
math:equalTo a fno:Function.
_:bn_158 a fno:Test.
_:bn_159 a fno:Parameter.
_:bn_160 a rdfs:Datatype.
_:bn_161 a fno:Parameter.
_:bn_162 a rdfs:Datatype.
math:exponentiation a fno:Function.
_:bn_163 a fno:Test.
_:bn_164 a fno:Test.
_:bn_165 a fno:Parameter.
_:bn_167 a rdfs:Datatype.
_:bn_169 a rdfs:Datatype.
_:bn_170 a fno:Parameter.
_:bn_171 a rdfs:Datatype.
math:greaterThan a fno:Function.
_:bn_172 a fno:Test.
_:bn_173 a fno:Parameter.
_:bn_174 a rdfs:Datatype.
_:bn_175 a fno:Parameter.
_:bn_176 a rdfs:Datatype.
math:lessThan a fno:Function.
_:bn_177 a fno:Test.
_:bn_178 a fno:Parameter.
_:bn_179 a rdfs:Datatype.
_:bn_180 a fno:Parameter.
_:bn_181 a rdfs:Datatype.
math:negation a fno:Function.
_:bn_182 a fno:Test.
_:bn_183 a fno:Parameter.
_:bn_184 a rdfs:Datatype.
_:bn_185 a fno:Parameter.
_:bn_186 a rdfs:Datatype.
math:notEqualTo a fno:Function.
_:bn_187 a fno:Test.
_:bn_188 a fno:Parameter.
_:bn_189 a rdfs:Datatype.
_:bn_190 a fno:Parameter.
_:bn_191 a rdfs:Datatype.
math:notGreaterThan a fno:Function.
_:bn_192 a fno:Test.
_:bn_193 a fno:Parameter.
_:bn_194 a rdfs:Datatype.
_:bn_195 a fno:Parameter.
_:bn_196 a rdfs:Datatype.
math:notLessThan a fno:Function.
_:bn_197 a fno:Test.
_:bn_198 a fno:Parameter.
_:bn_199 a rdfs:Datatype.
_:bn_200 a fno:Parameter.
_:bn_201 a rdfs:Datatype.
math:product a fno:Function.
_:bn_202 a fno:Test.
_:bn_203 a fno:Test.
_:bn_204 a fno:Parameter.
_:bn_206 a rdfs:Datatype.
_:bn_207 a fno:Parameter.
_:bn_208 a rdfs:Datatype.
math:quotient a fno:Function.
_:bn_209 a fno:Test.
_:bn_210 a fno:Parameter.
_:bn_212 a rdfs:Datatype.
_:bn_214 a rdfs:Datatype.
_:bn_215 a fno:Parameter.
_:bn_216 a rdfs:Datatype.
math:remainder a fno:Function.
_:bn_217 a fno:Test.
_:bn_218 a fno:Parameter.
_:bn_221 a fno:Parameter.
math:rounded a fno:Function.
_:bn_222 a fno:Test.
_:bn_223 a fno:Parameter.
_:bn_224 a rdfs:Datatype.
_:bn_225 a fno:Parameter.
math:sin a fno:Function.
_:bn_226 a fno:Test.
_:bn_227 a fno:Parameter.
_:bn_228 a rdfs:Datatype.
_:bn_229 a fno:Parameter.
_:bn_230 a rdfs:Datatype.
math:sinh a fno:Function.
_:bn_231 a fno:Test.
_:bn_232 a fno:Parameter.
_:bn_233 a rdfs:Datatype.
_:bn_234 a fno:Parameter.
_:bn_235 a rdfs:Datatype.
math:sum a fno:Function.
_:bn_236 a fno:Test.
_:bn_237 a fno:Parameter.
_:bn_239 a rdfs:Datatype.
_:bn_240 a fno:Parameter.
_:bn_241 a rdfs:Datatype.
math:tan a fno:Function.
_:bn_242 a fno:Test.
_:bn_243 a fno:Parameter.
_:bn_244 a rdfs:Datatype.
_:bn_245 a fno:Parameter.
_:bn_246 a rdfs:Datatype.
math:tanh a fno:Function.
_:bn_247 a fno:Test.
_:bn_248 a fno:Parameter.
_:bn_249 a rdfs:Datatype.
_:bn_250 a fno:Parameter.
_:bn_251 a rdfs:Datatype.
string:concatenation a fno:Function.
_:bn_252 a fno:Test.
_:bn_253 a fno:Parameter.
_:bn_255 a fno:Parameter.
string:contains a fno:Function.
_:bn_256 a fno:Test.
_:bn_257 a fno:Parameter.
_:bn_258 a fno:Parameter.
string:containsIgnoringCase a fno:Function.
_:bn_259 a fno:Test.
_:bn_260 a fno:Parameter.
_:bn_261 a fno:Parameter.
string:endsWith a fno:Function.
_:bn_262 a fno:Test.
_:bn_263 a fno:Parameter.
_:bn_264 a fno:Parameter.
string:equalIgnoringCase a fno:Function.
_:bn_265 a fno:Test.
_:bn_266 a fno:Parameter.
_:bn_267 a fno:Parameter.
string:format a fno:Function.
_:bn_268 a fno:Test.
_:bn_269 a fno:Parameter.
_:bn_271 a fno:Parameter.
string:greaterThan a fno:Function.
_:bn_272 a fno:Test.
_:bn_273 a fno:Parameter.
_:bn_274 a fno:Parameter.
string:lessThan a fno:Function.
_:bn_275 a fno:Test.
_:bn_276 a fno:Parameter.
_:bn_277 a fno:Parameter.
string:matches a fno:Function.
_:bn_278 a fno:Test.
_:bn_279 a fno:Parameter.
_:bn_280 a fno:Parameter.
string:notEqualIgnoringCase a fno:Function.
_:bn_281 a fno:Test.
_:bn_282 a fno:Parameter.
_:bn_283 a fno:Parameter.
string:notGreaterThan a fno:Function.
_:bn_284 a fno:Test.
_:bn_285 a fno:Parameter.
_:bn_286 a fno:Parameter.
string:notLessThan a fno:Function.
_:bn_287 a fno:Test.
_:bn_288 a fno:Parameter.
_:bn_289 a fno:Parameter.
string:notMatches a fno:Function.
_:bn_290 a fno:Test.
_:bn_291 a fno:Parameter.
_:bn_292 a fno:Parameter.
string:replace a fno:Function.
_:bn_293 a fno:Test.
_:bn_294 a fno:Parameter.
_:bn_298 a fno:Parameter.
string:scrape a fno:Function.
_:bn_299 a fno:Test.
_:bn_300 a fno:Parameter.
_:bn_303 a fno:Parameter.
string:startsWith a fno:Function.
_:bn_304 a fno:Test.
_:bn_305 a fno:Parameter.
_:bn_306 a fno:Parameter.
time:day a fno:Function.
_:bn_307 a fno:Test.
_:bn_307 a fno:TestSkip.
_:bn_308 a fno:Parameter.
_:bn_309 a fno:Parameter.
time:minute a fno:Function.
_:bn_310 a fno:Test.
_:bn_310 a fno:TestSkip.
_:bn_311 a fno:Parameter.
_:bn_312 a fno:Parameter.
time:month a fno:Function.
_:bn_313 a fno:Test.
_:bn_313 a fno:TestSkip.
_:bn_314 a fno:Parameter.
_:bn_315 a fno:Parameter.
time:second a fno:Function.
_:bn_316 a fno:Test.
_:bn_316 a fno:TestSkip.
_:bn_317 a fno:Parameter.
_:bn_318 a fno:Parameter.
time:timeZone a fno:Function.
_:bn_319 a fno:Test.
_:bn_319 a fno:TestSkip.
_:bn_320 a fno:Parameter.
_:bn_321 a fno:Parameter.
time:year a fno:Function.
_:bn_322 a fno:Test.
_:bn_322 a fno:TestSkip.
_:bn_323 a fno:Parameter.
_:bn_324 a fno:Parameter.
crypto:sha vs:term_status "testing".
list:append vs:term_status "testing".
list:first vs:term_status "testing".
list:in vs:term_status "testing".
list:iterate vs:term_status "testing".
list:last vs:term_status "testing".
list:length vs:term_status "testing".
list:member vs:term_status "testing".
list:memberAt vs:term_status "testing".
list:remove vs:term_status "testing".
log:conclusion vs:term_status "testing".
log:conjunction vs:term_status "testing".
log:content vs:term_status "testing".
log:dtlit vs:term_status "testing".
log:equalTo vs:term_status "testing".
log:forAllIn vs:term_status "testing".
log:includes vs:term_status "testing".
log:notEqualTo vs:term_status "testing".
log:notIncludes vs:term_status "testing".
log:outputString vs:term_status "testing".
log:parsedAsN3 vs:term_status "testing".
log:rawType vs:term_status "testing".
log:semantics vs:term_status "testing".
log:semanticsOrError vs:term_status "testing".
log:skolem vs:term_status "testing".
log:uri vs:term_status "testing".
log:langlit vs:term_status "testing".
math:absoluteValue vs:term_status "testing".
math:acos vs:term_status "testing".
math:asin vs:term_status "testing".
math:atan vs:term_status "testing".
math:cos vs:term_status "testing".
math:cosh vs:term_status "testing".
math:degrees vs:term_status "testing".
math:difference vs:term_status "testing".
math:equalTo vs:term_status "testing".
math:exponentiation vs:term_status "testing".
math:greaterThan vs:term_status "testing".
math:lessThan vs:term_status "testing".
math:negation vs:term_status "testing".
math:notEqualTo vs:term_status "testing".
math:notGreaterThan vs:term_status "testing".
math:notLessThan vs:term_status "testing".
math:product vs:term_status "testing".
math:quotient vs:term_status "testing".
math:remainder vs:term_status "testing".
math:rounded vs:term_status "testing".
math:sin vs:term_status "testing".
math:sinh vs:term_status "testing".
math:sum vs:term_status "testing".
math:tan vs:term_status "testing".
math:tanh vs:term_status "testing".
string:concatenation vs:term_status "testing".
string:contains vs:term_status "testing".
string:containsIgnoringCase vs:term_status "testing".
string:endsWith vs:term_status "testing".
string:equalIgnoringCase vs:term_status "testing".
string:format vs:term_status "testing".
string:greaterThan vs:term_status "testing".
string:lessThan vs:term_status "testing".
string:matches vs:term_status "testing".
string:notEqualIgnoringCase vs:term_status "testing".
string:notGreaterThan vs:term_status "testing".
string:notLessThan vs:term_status "testing".
string:notMatches vs:term_status "testing".
string:replace vs:term_status "testing".
string:scrape vs:term_status "testing".
string:startsWith vs:term_status "testing".
time:day vs:term_status "testing".
time:minute vs:term_status "testing".
time:month vs:term_status "testing".
time:second vs:term_status "testing".
time:timeZone vs:term_status "testing".
time:year vs:term_status "testing".
crypto:sha fnon:tldr "Gets as object the SHA-1 hash of the subject.".
list:append fnon:tldr "Appends the lists from the subject list into a single list as object.".
list:first fnon:tldr "Gets the first element of the subject list as object.".
list:in fnon:tldr "Checks whether the subject is found in the object list.".
list:iterate fnon:tldr "Iterates over each member of the subject list, getting their index/value pairs as the object.".
list:last fnon:tldr "Gets the last element of the subject list as object.".
list:length fnon:tldr "Gets the length of the subject list as object.".
list:member fnon:tldr "Checks whether the subject list contains the object.".
list:memberAt fnon:tldr "Gets the member of the subject list at the given subject index as object (index starts at 0).".
list:remove fnon:tldr "Removes the subject member from the subject list, and returns the resulting list as object.".
log:conclusion fnon:tldr "Gets all possible conclusions from the subject quoted graph, including rule inferences (deductive closure), as the object quoted graph.".
log:conjunction fnon:tldr "Merges the quoted graphs from the subject list into a single quoted graph as object.".
log:content fnon:tldr "Dereferences the subject IRI and retrieves the online resource as the object string.".
log:dtlit fnon:tldr "Creates a datatyped literal as object, based on the string value and datatype IRI in the subject list.".
log:equalTo fnon:tldr "Checks whether the subject and object N3 resources are the same. \nCan also be used to bind values to variables (see examples).".
log:forAllIn fnon:tldr "Two clauses are given in the subject list: for each result of the first clause, the builtin checks whether the second clause also holds for the result.".
log:includes fnon:tldr "Checks whether the subject quoted graph includes the object quoted graph (taking into account variables). \nCan also be used to bind variables to values within the graph contents (see examples).".
log:notEqualTo fnon:tldr "Checks whether the subject and object N3 resources are _not_ the same.".
log:notIncludes fnon:tldr "Checks whether the subject quoted graph _does not_ include the object quoted graph (taking into account variables)".
log:outputString fnon:tldr "The N3 reasoner will print the object strings in the order of the subject keys, instead of printing the derivations or deductive closure. This may require a reasoner flag to be set.".
log:parsedAsN3 fnon:tldr "Parses the subject string into an object quoted graph.".
log:rawType fnon:tldr "Gets the type of the N3 resource.".
log:semantics fnon:tldr "Gets as object the quoted graph that results from parsing an online (N3) string, found by dereferencing the subject IRI.".
log:semanticsOrError fnon:tldr "Either gets as object the quoted graph that results from parsing an online (N3) string, found by dereferencing the subject IRI; or an error message that explains what went wrong.".
log:skolem fnon:tldr "Gets as object a skolem IRI that is a function of the subject (commonly a list); the same subject will always result in the same skolem IRI.".
log:uri fnon:tldr "Gets as object the string representation of the subject URI.".
log:langlit fnon:tldr "Creates a language-tagged literal as object, based on the string value and language tag (see BCP47) in the subject list.".
math:absoluteValue fnon:tldr "Calculates as object the absolute value of the subject.".
math:acos fnon:tldr "Calculates the object as the arc cosine value of the subject.".
math:asin fnon:tldr "Calculates the object as the arc sine value of the subject.".
math:atan fnon:tldr "Calculates the object as the arc tangent value of the subject.".
math:cos fnon:tldr "Calculates the object as the cosine value of the subject.".
math:cosh fnon:tldr "Calculates the object as the hyperbolic cosine value of the subject.".
math:degrees fnon:tldr "Calculates the object as the value in degrees corresponding to the radians value of the subject.".
math:difference fnon:tldr "Calculates the object by subtracting the second number from the first number given in the subject list.".
math:equalTo fnon:tldr "Checks whether the subject and object are the same number.".
math:exponentiation fnon:tldr "Calculates the object as the result of raising the first number to the power of the second number in the subject list. \nYou can also use this to calculate the logarithm of the object, with as base the first number of the subject list (see examples).".
math:greaterThan fnon:tldr "Checks whether the subject is a number that is greater than the object.".
math:lessThan fnon:tldr "Checks whether the subject is a number that is less than the object.".
math:negation fnon:tldr "Calculates the object as the negation of the subject.".
math:notEqualTo fnon:tldr "Checks whether the subject and object are not the same number.".
math:notGreaterThan fnon:tldr "Checks whether the subject is a number that is not greater than the object.\nYou can use this as an equivalent of a lessThanOrEqual operator.".
math:notLessThan fnon:tldr "Checks whether the subject is a number that is not less than the object.\nYou can use this as an equivalent of a greaterThanOrEqual operator.".
math:product fnon:tldr "Calculates the object as the product of the numbers given in the subject list.".
math:quotient fnon:tldr "Calculates the object by dividing the first number by the second number given in the subject list.".
math:remainder fnon:tldr "Calculates the object as the remainder of the division of the first integer by the second integer given in the subject list.".
math:rounded fnon:tldr "Calculates the object as the integer that is closest to the subject number.".
math:sin fnon:tldr "Calculates the object as the sine value of the subject.".
math:sinh fnon:tldr "Calculates the object as the hyperbolic sine value of the subject.".
math:sum fnon:tldr "Calculates the object as the sum of the numbers given in the subject list.".
math:tan fnon:tldr "Calculates the object as the tangent value of the subject.".
math:tanh fnon:tldr "Calculates the object as the hyperbolic tangent value of the subject.".
string:concatenation fnon:tldr "Concatenates the strings from the subject list into a single string as object.".
string:contains fnon:tldr "Checks whether the subject string contains the object string.".
string:containsIgnoringCase fnon:tldr "Checks whether the subject string contains the object string, ignoring differences between lowercase and uppercase.".
string:endsWith fnon:tldr "Checks whether the subject string ends with the object string.".
string:equalIgnoringCase fnon:tldr "Checks whether the subject string is the same as the object string, ignoring differences between lowercase and uppercase.".
string:format fnon:tldr "Calculates the object as the result of replacing the tags in the first string from the subject list with the remaining strings from the subject list.\nSee C's sprintf function for details on these tags.".
string:greaterThan fnon:tldr "Checks whether the subject string is greater than the object string, according to Unicode code order.".
string:lessThan fnon:tldr "Checks whether the subject string is less than the object string, according to Unicode code order.".
string:matches fnon:tldr "Checks whether the subject string matches the object regular expression.\nThe regular expression follows the perl, python style.".
string:notEqualIgnoringCase fnon:tldr "Checks whether the subject string is not the same as the object string, ignoring differences between lowercase and uppercase.".
string:notGreaterThan fnon:tldr "Checks whether the subject string is not greater than the object string, according to Unicode code order.\nYou can use this as an equivalent of a lessThanOrEqual operator.".
string:notLessThan fnon:tldr "Checks whether the subject string is not less than the object string, according to Unicode code order.\nYou can use this as an equivalent of a greaterThanOrEqual operator.".
string:notMatches fnon:tldr "Checks whether the subject string does not match the object regular expression.\nThe regular expression follows the perl, python style.".
string:replace fnon:tldr "Calculates the object as the result of, given the strings in the subject list, replacing all occurrences of the second string in the first string with the third string.".
string:scrape fnon:tldr "Calculates the object as the first matching group when, given the subject list, matching the second string as regular expression (with exactly 1 group) against the first string.".
string:startsWith fnon:tldr "Checks whether the subject string starts with the object string.".
time:day fnon:tldr "Gets as object the integer day component of the subject xsd:dateTime.".
time:minute fnon:tldr "Gets as object the integer minutes component of the subject xsd:dateTime.".
time:month fnon:tldr "Gets as object the integer month component of the subject xsd:dateTime.".
time:second fnon:tldr "Gets as object the integer seconds component of the subject xsd:dateTime.".
time:timeZone fnon:tldr "Gets as object the trailing timezone offset of the subject xsd:dateTime (e.g., \"-05:00\").".
time:year fnon:tldr "Gets as object the integer year component of the subject xsd:dateTime.".
crypto:sha dcterms:description "`true` if and only if `$o` is the SHA-1 hash of `$s`.".
_:bn_1 dcterms:description "\nCalculate the SHA-1 of the string \"hello world\".\n            ".
_:bn_2 dcterms:description "".
_:bn_3 dcterms:description "".
list:append dcterms:description "`true` if and only if `$o` is the concatenation of all lists `$s.i`.".
_:bn_4 dcterms:description "\nAppend (3 4) to the list (1 2).\n            ".
_:bn_5 dcterms:description "\nWhat do we need to prepend to (3 4) to get (1 2 3 4)?\n            ".
_:bn_6 dcterms:description "\nWhat do we need to append to (1 2) to get (1 2 3 4)?\n            ".
_:bn_7 dcterms:description "\nIs the list (1 2 3 4) equal to appending (1), (2 3) , (4)?\n            ".
_:bn_8 dcterms:description "".
list:first dcterms:description "`true` if and only if `$` is a list and `$o` is the first member of that list.".
_:bn_11 dcterms:description "\nWhat is the first element of ( ('a') { :a :b :c } 42 )?\n            ".
_:bn_12 dcterms:description "".
list:in dcterms:description "`true` if and only if `$o` is a list and `$s` is a member of that list.".
_:bn_14 dcterms:description "\nDoes ( \"dog\" \"penguin\" \"cat\" ) contain a \"cat\"?\n            ".
_:bn_15 dcterms:description "\nWhat are the members of ( \"dog\" \"penguin\" \"cat\" )?\n            ".
_:bn_16 dcterms:description "".
list:iterate dcterms:description "`true` if and only if `$s` is a list and `$o` is a list with two elements: \n`$o.1` is a valid index in list `$s` (index starts at 0), and `$o.2` is found at that index in list `$s`.".
_:bn_18 dcterms:description "\nIterate over the list (\"dog\" \"penguin\" \"cat\").\n            ".
_:bn_19 dcterms:description "\nIs \"cat\" the third item in the list (\"dog\" \"penguin\" \"cat\")?\n            ".
_:bn_20 dcterms:description "\nWhat is the index of \"cat\" in the list (\"dog\" \"penguin\" \"cat\")?\n            ".
_:bn_21 dcterms:description "".
_:bn_22 dcterms:description "".
list:last dcterms:description "`true` if and only if `$` is a list and `$o` is the last member of that list.".
_:bn_25 dcterms:description "\nExtract the last element of the list (1 2 3 4).\n            ".
_:bn_26 dcterms:description "\nTest if the last element of the list (1 2 3 4) is 4.\n            ".
_:bn_27 dcterms:description "".
list:length dcterms:description "`true` if and only if `$s` is a list and `$o` is the integer length of that list.".
_:bn_29 dcterms:description "\nCalculate the length of the list (1 2 3 4).\n            ".
_:bn_30 dcterms:description "".
list:member dcterms:description "`true` if and only `$s` is a list and `o` is a member of that list.".
_:bn_32 dcterms:description "\nDetermine the members of the list (\"dog\" \"penguin\" \"cat\").\n            ".
_:bn_33 dcterms:description "\nIs \"cat\" a member of the list (\"dog\" \"penguin\" \"cat\")?\n            ".
_:bn_34 dcterms:description "".
list:memberAt dcterms:description "`true` if and only if `$s.1` is a list, `$s.2` is a valid index in list `$s.1`, and `$o` is found at that index in the list.".
_:bn_36 dcterms:description "\nGet the third member of the list (\"dog\" \"penguin\" \"cat\").\n            ".
_:bn_37 dcterms:description "\nFind the index of \"cat\" in the list (\"dog\" \"cat\" \"penguin\" \"cat\").\n            ".
_:bn_38 dcterms:description "".
_:bn_41 dcterms:description "".
list:remove dcterms:description "`true` if and only if `$s.1` is a list, and `$o` is a list composed of the members of `$s.1` with member `$s.2` removed (if it was present; else, `$o` will be the same list).".
_:bn_42 dcterms:description "\nRemove \"penguin\" from the list (\"dog\" \"penguin\" \"cat\" \"penguin\").\n            ".
_:bn_43 dcterms:description "".
_:bn_46 dcterms:description "".
log:conclusion dcterms:description "`true` if and only if `$o` is the set of conclusions which can be drawn from `$s` (deductive closure), \nby applying any rules it contains to the data it contains.".
_:bn_47 dcterms:description "\nDraw all conclusions from the formula \":Felix a :Cat . { ?X a :Cat } => { ?X :says \"Meow\" . }\".\n            ".
_:bn_48 dcterms:description "".
_:bn_49 dcterms:description "".
log:conjunction dcterms:description "`true` if and only if `$o` is a quoted graph that includes the contents of each of the quoted graphs `$s.i`.".
_:bn_50 dcterms:description "\nMerge the formulas \"{ :Felix a :Cat . }\" , \"{ :Pluto a :Dog . }\", \"{ :Pingu a :Penguin . }\" .\n            ".
_:bn_51 dcterms:description "".
log:content dcterms:description "`true` if and only if `$o` is a string that represents the online resource to which `$s` is dereferenced.".
_:bn_54 dcterms:description "\nFetch the content of https://www.w3.org/People/Berners-Lee/card.\n            ".
_:bn_55 dcterms:description "".
_:bn_56 dcterms:description "".
log:dtlit dcterms:description "`true` if and only if `$o` is a datatyped literal with string value corresponding to `$s.1` and datatype IRI corresponding to `$s.2`.".
_:bn_57 dcterms:description "\nCreate a datatyped literal from the string \"1971-05-05\" and the type xsd:date.\n            ".
_:bn_58 dcterms:description "\nParse the datatyped literal \"1971-05-05\"^^xsd:date into a string and data type IRI.\n            ".
_:bn_59 dcterms:description "".
log:equalTo dcterms:description "`true` if and only if `$s` and `$o` are the same N3 resource.\nNot to be confused with owl:sameAs.".
_:bn_63 dcterms:description "\nDetermine if 1 is equal to 1 and \"Cat\" is equal to \"Cat\" and { :A :B :C . :D :E :F } is equal to { :D :E :F . :A :B :C }.\n            ".
_:bn_64 dcterms:description "\nDetermine if \"Cat\" is equal to \"Cat\"@en .\n            ".
_:bn_65 dcterms:description "\nAssign a value to an existential or universal variable.\n            ".
_:bn_66 dcterms:description "\nAssign values from the object list to universal variables given in the subject list. \nThis can be compared to \"destructuring\" or \"unpacking\" in programming languages such as JavaScript or Python.\nIn contrast to those languages, however, it works in either direction in N3.\nIn general, this works because an effort is made to ensure the truth of builtin statements in N3.\n            ".
_:bn_67 dcterms:description "\nAssign values from the object list to universal variables given in the subject list. \nThis can be compared to \"destructuring\" or \"unpacking\" in programming languages such as JavaScript or Python.\nIn contrast to those languages, however, it works in either direction in N3.\nIn general, this works because an effort is made to ensure the truthfulness of builtin statements in N3.\n            ".
log:forAllIn dcterms:description "`true` if and only if, for each solution for which the first clause `$s.1` is true, the second clause `$s.2` is true as well. \nThis is a scoped universal quantification.".
_:bn_70 dcterms:description "\nFor each subtask of a composite task, check whether the subtask is completed. \n            ".
_:bn_71 dcterms:description "".
_:bn_74 dcterms:description "Scope of the universal quantification. Leave as a variable to use current N3 document as scope.".
log:includes dcterms:description "`true` if and only if there exists some substitution which, when applied to `$o`, \ncreates a quoted graph `$o`' such that every statement in `$o`' is also in `$s`;\nwhereby every variable, universally or existentially quantified in `$o`', is quantified in the same way in `$s`. \nVariable substitution is applied recursively to nested compound terms such as quoted graphs ans lists.".
_:bn_75 dcterms:description "\nCheck whether the formula { :Felix a :Cat } includes { ?X a :Cat }.\n            ".
log:notEqualTo dcterms:description "`true` if and only if `$s log:equalTo $o` is false.".
_:bn_78 dcterms:description "\nDetermine if 1 is not equal to 2 and \"Cat\" is not equal to \"CAT\" and { :A :B :C . } is not equal to { :C :B :A }.\n            ".
_:bn_79 dcterms:description "\nDetermine if \"Cat\" is not equal to \"Cat\"@en .\n            ".
_:bn_80 dcterms:description "\nCheck if an existential or universal variable is not equal to a value.\n            ".
log:notIncludes dcterms:description "`true` if and only if `$s log:includes $o` is `false`.".
_:bn_83 dcterms:description "\nCheck whether the formula { :Felix a :Cat } does not include { ?X :eats ?Y }.\n            ".
_:bn_84 dcterms:description "\nCheck whether the formula { :a :b :c } does not include { :a :b :d }.\n            ".
log:outputString dcterms:description "The concrete semantics of this builtin (e.g., which N3 resource types are supported) will depend on the N3 reasoner.".
_:bn_87 dcterms:description "\nPrint the two string \"This is the first line\n\" , \"This is the second line\n\" to the output.\n            ".
log:parsedAsN3 dcterms:description "`true` if and only if `$s`, when parsed as N3, gives `$o`.\n`$s` should be a syntactically valid string in N3 format.".
_:bn_90 dcterms:description "\nParse the string ':Socrates a :Human .' as N3.\n            ".
_:bn_91 dcterms:description "should be a syntactically valid string in N3 format".
log:rawType dcterms:description "`true` if and only if the N3 resource type of `$s` is `$o`.\nN3 resource types include `log:Formula`, `log:Literal`, `log:List`, `log:Set` or `log:Other`.".
_:bn_93 dcterms:description "\nGet the type of literal resources.\n            ".
_:bn_94 dcterms:description "\nGet the type of resources.\n            ".
_:bn_95 dcterms:description "\nGet the type of lists and quoted graphs.\n            ".
log:semantics dcterms:description "`true` if and only if `$o` is a quoted graph that results from parsing the string that results from dereferencing `$s`.".
_:bn_98 dcterms:description "\nRead the contents of the file `<semantics.data>` and parse it as Notation3.\nWe assume `<semantics.data>` contains the text:\n```       \n  @prefix : <http://example.org/>.\n  :Socrates a :Human .\n```       \n            ".
_:bn_99 dcterms:description "".
_:bn_100 dcterms:description "".
log:semanticsOrError dcterms:description "`true` if and only if (a) `$o` is a quoted graph that results from parsing the string that results from dereferencing `$s`; or (b) an error message explaining what went wrong.".
_:bn_101 dcterms:description "\nRead the contents a non existing `<error.data>` and parse it as Notation3 (which of course will fail).\n            ".
_:bn_102 dcterms:description "".
_:bn_103 dcterms:description "either a log:Formula or xsd:string".
log:skolem dcterms:description "`true` if and only if `$o` is a skolem IRI that is a function of the subject.".
_:bn_104 dcterms:description "\nGenerate a unique Skolem IRI from the list (:abc 77 \"xyz\") .\n            ".
_:bn_105 dcterms:description "".
_:bn_106 dcterms:description "".
log:uri dcterms:description "`true` if and only if `$o` is the string representation of `$s`.".
_:bn_107 dcterms:description "\nParse the URI `<https://www.w3.org>` into a string .\n            ".
_:bn_108 dcterms:description "a URI".
_:bn_109 dcterms:description "".
log:langlit dcterms:description "\n`true` if and only if `$o` is a language-tagged literal with string value corresponding to `$s.1` and language tag corresponding to `$s.2`.\n`$s.2` should be a string in the form of a BCP47 language tag.".
_:bn_110 dcterms:description "\nCreate a language-tagged literal from the string \"hello\" and language tag \"en\".\n            ".
_:bn_111 dcterms:description "".
math:absoluteValue dcterms:description "`true` if and only if `$o` is the absolute value of `$s`.".
_:bn_115 dcterms:description "\nCalculate the absolute value of the value -2.\n            ".
math:acos dcterms:description "`true` if and only if `$o` is the arc cosine value of `$s`.".
_:bn_120 dcterms:description "\nCalculate the arc cosine of the value 1.\n            ".
math:asin dcterms:description "`true` if and only if `$o` is the arc sine value of `$s`.".
_:bn_125 dcterms:description "\nCalculate the arc sine of the value 1.\n            ".
math:atan dcterms:description "`true` if and only if `$o` is the arc tangent value of `$s`.".
_:bn_130 dcterms:description "\nCalculate the arc tangent of the value 1.\n            ".
math:cos dcterms:description "`true` if and only if `$o` is the cosine value of `$s`.".
_:bn_135 dcterms:description "\nCalculate the cosine of the value 0.\n            ".
_:bn_136 dcterms:description "angle expressed in radians".
math:cosh dcterms:description "`true` if and only if `$o` is the hyperbolic cosine value of `$s`.".
_:bn_140 dcterms:description "\nCalculate the hyperbolic cosine of the value 0.\n            ".
_:bn_141 dcterms:description "angle expressed in radians".
math:degrees dcterms:description "`true` if and only if `$o` is the value in degrees corresponding to the radians value of `$s`.".
_:bn_145 dcterms:description "\nCalculate the degrees of the radians value 1.57079632679.\n            ".
_:bn_146 dcterms:description "angle expressed in radians".
_:bn_148 dcterms:description "angle expressed in degrees".
math:difference dcterms:description "`true` if and only if `$o` is the result of subtracting `$s.2` from `$s.1`.".
_:bn_150 dcterms:description "\nCalculate the value of 7 minus 2.\n            ".
_:bn_151 dcterms:description "".
_:bn_156 dcterms:description "".
math:equalTo dcterms:description "`true` if and only if `$s` is the same number as `$o`.".
_:bn_158 dcterms:description "\nCheck if the numbers 42 and 42 are equal .\n            ".
math:exponentiation dcterms:description "`true` if and only if `$o` is the result of raising `$s.1` to the power of `$s.2`".
_:bn_163 dcterms:description "\nCalculate the value of 7 raised to the power of 2 .\n            ".
_:bn_164 dcterms:description "\nCalculate the logarithm of 49 base 2 .\n            ".
_:bn_165 dcterms:description "".
_:bn_170 dcterms:description "".
math:greaterThan dcterms:description "`true` if and only if `$s` is a number that is greater than `$o`.".
_:bn_172 dcterms:description "\nCheck if 42 is greater than 41 .\n            ".
math:lessThan dcterms:description "`true` if and only if `$s` is a number that is less than `$o`.".
_:bn_177 dcterms:description "\nCheck if 41 is less than 42 .\n            ".
math:negation dcterms:description "`true` if and only if `$o` is the negation of `$s`.".
_:bn_182 dcterms:description "\nCalculate the negation of the value 42 .\n            ".
math:notEqualTo dcterms:description "`true` if and only if `$s` is the not same number as `$o`.".
_:bn_187 dcterms:description "\nCheck if the numbers 41 and 42 are not equal .\n            ".
math:notGreaterThan dcterms:description "`true` if and only if `$s` is a number that is not greater than `$o`.".
_:bn_192 dcterms:description "\nCheck if 41 is not greater than 42 .\n            ".
math:notLessThan dcterms:description "`true` if and only if `$s` is a number that is not less than `$o`.".
_:bn_197 dcterms:description "\nCheck if 42 is not less than 41 .\n            ".
math:product dcterms:description "`true` if and only if `$o` is the arithmetic product of all numbers `$s.i`".
_:bn_202 dcterms:description "\nCalculate the product of 2 and 21.\n            ".
_:bn_203 dcterms:description "\nCalculate the product of 2,4,6, and 8 .\n            ".
_:bn_204 dcterms:description "".
_:bn_207 dcterms:description "".
math:quotient dcterms:description "`true` if and only if `$o` is the result of dividing `$s.1` by `$s.2`.".
_:bn_209 dcterms:description "\nCalculate the quotient of 42 and 2.\n            ".
_:bn_210 dcterms:description "".
_:bn_215 dcterms:description "".
math:remainder dcterms:description "`true` if and only if `$o` is the remainder of dividing `$s.1` by `$s.2`.".
_:bn_217 dcterms:description "\nCalculate the remainder of 10 divided by 3.\n            ".
_:bn_218 dcterms:description "".
_:bn_221 dcterms:description "".
math:rounded dcterms:description "`true` if and only if `$o` is the integer that is closest to `$s`.\nIf there are two such numbers, then the one closest to positive infinity is returned.\n".
_:bn_222 dcterms:description "\nCalculate the rounded version of 3.3.\n            ".
math:sin dcterms:description "`true` if and only if `$o` is the sine value of `$s`.".
_:bn_226 dcterms:description "\nCalculate the sin of pi/2 (1.57079632679) .\n            ".
_:bn_227 dcterms:description "angle expressed in radians".
math:sinh dcterms:description "`true` if and only if `$o` is the hyperbolic sine value of `$s`.".
_:bn_231 dcterms:description "\nCalculate the sinh of log(1 + sqrt(2)) (0.88137358701954302).\n            ".
_:bn_232 dcterms:description "angle expressed in radians".
math:sum dcterms:description "`true` if and only if `$o` is the arithmetic sum of all numbers `$s.i`".
_:bn_236 dcterms:description "\nCalculate the sum of 1,2,3,4,5,6,7,8,9,10.\n            ".
_:bn_237 dcterms:description "".
_:bn_240 dcterms:description "".
math:tan dcterms:description "`true` if and only if `$o` is the tangent value of `$s`.".
_:bn_242 dcterms:description "\nCalculate the tangent of the value 0.7853981633974483 .\n            ".
_:bn_243 dcterms:description "angle expressed in radians".
math:tanh dcterms:description "`true` if and only if `$o` is the hyperbolic tangent value of `$s`.".
_:bn_247 dcterms:description "\nCalculate the hyperbolic tanget of 0.549306 .\n            ".
_:bn_248 dcterms:description "angle expressed in radians".
string:concatenation dcterms:description "`true` if and only if the string concatenation of `$s.i` equals `$o`.".
_:bn_252 dcterms:description "\nConcatenates the string \"hello\", \" \" and \"world!\".\n            ".
_:bn_253 dcterms:description "".
string:contains dcterms:description "`true` if and only if `$s` contains `$o`.".
_:bn_256 dcterms:description "\nChecks whether the string \"hello world!\" contains the string \"llo worl\".\n            ".
string:containsIgnoringCase dcterms:description "`true` if and only if `$s` contains `$o` when ignoring case differences.".
_:bn_259 dcterms:description "\nChecks whether the string \"hello world!\" contains the string \"lLO woRl\".\n            ".
string:endsWith dcterms:description "`true` if and only if `$s` ends with `$o`.".
_:bn_262 dcterms:description "\nChecks whether the string \"hello world!\" ends with \"orld!\".\n            ".
string:equalIgnoringCase dcterms:description "`true` if and only if `$s` is the same string as `$o` when ignoring case differences.".
_:bn_265 dcterms:description "\nChecks whether the string \"hello world!\" is equal to \"hELLo wORld!\" ignoring the case .\n            ".
string:format dcterms:description "`true` if and only if `$o` is the result of replacing the tags found in `$s.(i=1)` with the strings `$s.(i>1)`".
_:bn_268 dcterms:description "\nCalculate the result of applying the format \"%s://%s/%s\" to the strings \"https\", \"w3c.github.io\" and \"N3/spec\" .\n            ".
_:bn_270 dcterms:description "`$s.(i=1)` is a format string including tags. `$s.(i>1)` are strings to replace these tags. See C's sprintf function for details.".
string:greaterThan dcterms:description "`true` if and only if `$s` is greater than `$o` as per the Unicode code order.".
_:bn_272 dcterms:description "\nChecks whether the string \"Pengiun\" is greater than the string \"Cat\" .\n            ".
string:lessThan dcterms:description "`true` if and only if `$s` is less than `$o` as per the Unicode code order.".
_:bn_275 dcterms:description "\nChecks whether the string \"Cat\" is less than the string \"Penguin\" .\n            ".
string:matches dcterms:description "`true` if and only if string `$s` matches the regular expression `$o`".
_:bn_278 dcterms:description "\nChecks whether the string \"hello world!\" matches the regular expression \".*(l)+o wo.*\".\n            ".
_:bn_280 dcterms:description "regular expression in perl, python style".
string:notEqualIgnoringCase dcterms:description "`true` if and only if `$s` is not the same string as `$o` when ignoring case differences.".
_:bn_281 dcterms:description "\nChecks whether the string \"hello world!\" is not equal to \"hELLo dunia!\" ignorning the case .\n            ".
string:notGreaterThan dcterms:description "`true` if and only if `$s` is not greater than `$o` as per the Unicode code order.".
_:bn_284 dcterms:description "\nChecks whether the string \"Cat\" is not greater than the string \"Penguin\" .\n            ".
string:notLessThan dcterms:description "`true` if and only if `$s` is not less than `$o` as per the Unicode code order.".
_:bn_287 dcterms:description "\nChecks whether the string \"Penguin\" is not less than the string \"Cat\" .\n            ".
string:notMatches dcterms:description "`true` if and only if string `$s` does not match the regular expression `$o`".
_:bn_290 dcterms:description "\nChecks whether the string \"hello world!\" no matches the regular expression \".*(l)+o dunia.*\".\n            ".
_:bn_292 dcterms:description "regular expression in perl, python style".
string:replace dcterms:description "`true` if and only if `$o` is the result of replacing all occurrences of `$s.2` in `$s.1` with `$s.3`".
_:bn_293 dcterms:description "\nReplace all \"l\"-s in the string \"hello world!\" with the bracket version \"[l]\" .\n            ".
string:scrape dcterms:description "`true` if and only if `$o` is the first matching group when matching `$s.2` as a regular expression against `$s.1`".
_:bn_299 dcterms:description "\nExtract from the string \"https://w3c.github.io/N3/spec/\" the last path element using a regular expression .\n            ".
_:bn_302 dcterms:description "regular expression with 1 group".
string:startsWith dcterms:description "`true` if and only if `$s` starts with `$o`.".
_:bn_304 dcterms:description "\nChecks whether the string \"hello world!\" starts with \"hello\" .\n            ".
time:day dcterms:description "`true` if and only if `$o` is the integer day component of `$s`.".
_:bn_307 dcterms:description "\nReturn the day component of the date \"2023-04-01T18:06:04Z\" .\n            ".
time:minute dcterms:description "`true` if and only if `$o` is the integer minutes component of `$s`.".
_:bn_310 dcterms:description "\nReturn the minute component of the date \"2023-04-01T18:06:04Z\" .\n            ".
time:month dcterms:description "`true` if and only if `$o` is the integer month component of `$s`.".
_:bn_313 dcterms:description "\nReturn the month component of the date \"2023-04-01T18:06:04Z\" .\n            ".
time:second dcterms:description "`true` if and only if `$o` is the integer seconds component of `$s`.".
_:bn_316 dcterms:description "\nReturn the seconds component of the date \"2023-04-01T18:06:04Z\" .\n            ".
time:timeZone dcterms:description "`true` if and only if `$o` is the timezone offset of `$s`.".
_:bn_319 dcterms:description "\nReturn the time zone component of the date \"2023-04-01T18:06:04Z\" .\n            ".
time:year dcterms:description "`true` if and only if `$o` is the integer year component of `$s`.".
_:bn_322 dcterms:description "\nReturn the minute component of the date \"2023-04-01T18:06:04Z\" .\n            ".
crypto:sha fno:example (_:bn_1).
list:append fno:example (_:bn_4 _:bn_5 _:bn_6 _:bn_7).
list:first fno:example (_:bn_11).
list:in fno:example (_:bn_14 _:bn_15).
list:iterate fno:example (_:bn_18 _:bn_19 _:bn_20).
list:last fno:example (_:bn_25 _:bn_26).
list:length fno:example (_:bn_29).
list:member fno:example (_:bn_32 _:bn_33).
list:memberAt fno:example (_:bn_36 _:bn_37).
list:remove fno:example (_:bn_42).
log:conclusion fno:example (_:bn_47).
log:conjunction fno:example (_:bn_50).
log:content fno:example (_:bn_54).
log:dtlit fno:example (_:bn_57 _:bn_58).
log:equalTo fno:example (_:bn_63 _:bn_64 _:bn_65 _:bn_66 _:bn_67).
log:forAllIn fno:example (_:bn_70).
log:includes fno:example (_:bn_75).
log:notEqualTo fno:example (_:bn_78 _:bn_79 _:bn_80).
log:notIncludes fno:example (_:bn_83 _:bn_84).
log:outputString fno:example (_:bn_87).
log:parsedAsN3 fno:example (_:bn_90).
log:rawType fno:example (_:bn_93 _:bn_94 _:bn_95).
log:semantics fno:example (_:bn_98).
log:semanticsOrError fno:example (_:bn_101).
log:skolem fno:example (_:bn_104).
log:uri fno:example (_:bn_107).
log:langlit fno:example (_:bn_110).
math:absoluteValue fno:example (_:bn_115).
math:acos fno:example (_:bn_120).
math:asin fno:example (_:bn_125).
math:atan fno:example (_:bn_130).
math:cos fno:example (_:bn_135).
math:cosh fno:example (_:bn_140).
math:degrees fno:example (_:bn_145).
math:difference fno:example (_:bn_150).
math:equalTo fno:example (_:bn_158).
math:exponentiation fno:example (_:bn_163 _:bn_164).
math:greaterThan fno:example (_:bn_172).
math:lessThan fno:example (_:bn_177).
math:negation fno:example (_:bn_182).
math:notEqualTo fno:example (_:bn_187).
math:notGreaterThan fno:example (_:bn_192).
math:notLessThan fno:example (_:bn_197).
math:product fno:example (_:bn_202 _:bn_203).
math:quotient fno:example (_:bn_209).
math:remainder fno:example (_:bn_217).
math:rounded fno:example (_:bn_222).
math:sin fno:example (_:bn_226).
math:sinh fno:example (_:bn_231).
math:sum fno:example (_:bn_236).
math:tan fno:example (_:bn_242).
math:tanh fno:example (_:bn_247).
string:concatenation fno:example (_:bn_252).
string:contains fno:example (_:bn_256).
string:containsIgnoringCase fno:example (_:bn_259).
string:endsWith fno:example (_:bn_262).
string:equalIgnoringCase fno:example (_:bn_265).
string:format fno:example (_:bn_268).
string:greaterThan fno:example (_:bn_272).
string:lessThan fno:example (_:bn_275).
string:matches fno:example (_:bn_278).
string:notEqualIgnoringCase fno:example (_:bn_281).
string:notGreaterThan fno:example (_:bn_284).
string:notLessThan fno:example (_:bn_287).
string:notMatches fno:example (_:bn_290).
string:replace fno:example (_:bn_293).
string:scrape fno:example (_:bn_299).
string:startsWith fno:example (_:bn_304).
time:day fno:example (_:bn_307).
time:minute fno:example (_:bn_310).
time:month fno:example (_:bn_313).
time:second fno:example (_:bn_316).
time:timeZone fno:example (_:bn_319).
time:year fno:example (_:bn_322).
_:bn_1 fno:expression "\n@prefix : <http://example.org/> .\n@prefix crypto: <http://www.w3.org/2000/10/swap/crypto#> .\n\n{ \"hello world\" crypto:sha ?sha . } => { :result :is ?sha . } .\n            ".
_:bn_4 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n{ ( (1 2) (3 4) ) list:append ?list . } => { :result :is ?list . } .\n            ".
_:bn_5 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n{ ( ?what (3 4) ) list:append (1 2 3 4) . } => { :result :is ?what . } .\n            ".
_:bn_6 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n{ ( (1 2) ?what ) list:append (1 2 3 4) . } => { :result :is ?what . } .\n            ".
_:bn_7 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n{ ( (1) (2 3) (4) ) list:append (1 2 3 4) . } => { :result :is true . } .\n            ".
_:bn_11 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n{ ( ('a') { :a :b :c } 42 ) list:first ?what . } => { :result :is ?what . } .\n            ".
_:bn_14 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n{ \"cat\" list:in ( \"dog\" \"penguin\" \"cat\" ) . } => { :result :is true . } .\n            ".
_:bn_15 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n{ ?what list:in ( \"dog\" \"penguin\" \"cat\" ) . } => { :result :is ?what . } .\n            ".
_:bn_18 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n{ (\"dog\" \"penguin\" \"cat\") list:iterate (?index ?member) . } => { :result :is (?index ?member) . } .\n            ".
_:bn_19 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n:let :param (\"dog\" \"penguin\" \"cat\") .\n{\n    :let :param ?param . \n    ?param list:iterate (2 \"cat\") .  \n}\n=> \n{ \n    :result :is true . \n} .\n            ".
_:bn_20 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n:let :param (\"dog\" \"penguin\" \"cat\") .\n{\n    :let :param ?param . \n    ?param list:iterate (?index \"cat\") .  \n}\n=> \n{ \n    :result :is ?index . \n} .\n            ".
_:bn_25 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n{ (1 2 3 4) list:last ?last . } => { :result :is ?last . } .\n            ".
_:bn_26 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n:let :param (1 2 3 4).\n\n{ \n    :let :param ?param .\n    ?param list:last 4 . \n} \n=> \n{ \n    :result :is true . \n} .\n            ".
_:bn_29 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n{ (1 2 3 4) list:length ?length . } => { :result :is ?length . } .\n            ".
_:bn_32 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n{ (\"dog\" \"penguin\" \"cat\") list:member ?member . } => { :result :is ?member . } .\n            ".
_:bn_33 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n:let :param (\"dog\" \"penguin\" \"cat\") .\n\n{ \n    :let :param ?param .\n    ?param list:member \"cat\" . \n} \n=> \n{ \n    :result :is true . \n} .\n            ".
_:bn_36 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n:let :param (\"dog\" \"penguin\" \"cat\").\n\n{\n    :let :param ?param .\n    ( ?param 2 ) list:memberAt ?third .\n} \n=> \n{ \n    :result :is ?third . \n} .\n            ".
_:bn_37 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n:let :param (\"dog\" \"cat\" \"penguin\" \"cat\").\n\n{\n    :let :param ?param .\n    ( ?param ?index ) list:memberAt \"cat\" .\n} \n=> \n{ \n    :result :is ?index . \n} .\n            ".
_:bn_42 fno:expression "\n@prefix : <http://example.org/>.\n@prefix list: <http://www.w3.org/2000/10/swap/list#> .\n\n:let :param (\"dog\" \"penguin\" \"cat\" \"penguin\") .\n{ \n    :let :param ?param . \n    ( ?param \"penguin\" ) list:remove ?list .\n} \n=> \n{ \n    :result :is ?list . \n} .\n            ".
_:bn_47 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n:let :param { \n    :Felix a :Cat . \n    { ?X a :Cat . } => { ?X :says \"Meow\" . } .\n} .\n\n{ \n    :let :param ?param .\n    ?param log:conclusion ?conclusion .\n} \n=> \n{ \n    :result :is ?conclusion . \n} .\n            ".
_:bn_50 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{ \n    ( { :Felix a :Cat . }\n      { :Pluto a :Dog . }  \n      { :Pingu a :Penguin . }\n    ) log:conjunction ?merged .\n} \n=> \n{ \n    :result :is ?merged . \n} .\n            ".
_:bn_54 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{ \n    <https://www.w3.org/People/Berners-Lee/card> log:content ?content .\n} \n=> \n{ \n    :result :is ?content . \n} .\n            ".
_:bn_57 fno:expression "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{ ( \"1971-05-05\" xsd:date ) log:dtlit ?typed } => { :result :is ?typed . } .\n            ".
_:bn_58 fno:expression "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{ \n    ( ?string ?type ) log:dtlit \"1971-05-05\"^^xsd:date .\n} \n=> \n{ \n    :result :is ( ?string ?type ) . \n} .\n            ".
_:bn_63 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{\n    1 log:equalTo 1 .\n    \"Cat\" log:equalTo \"Cat\" .\n    { :A :B :C . :D :E :F . } log:equalTo { :D :E :F . :A :B :C . } .\n}\n=>\n{\n    :result :is true .\n} . \n            ".
_:bn_64 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{\n    # This will fail\n    \"Cat\" log:equalTo \"Cat\"@en .\n}\n=>\n{\n    :result :is true .\n} . \n            ".
_:bn_65 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{\n    _:x log:equalTo 42 .\n    ?q  log:equalTo \"Cat\"@en .\n\n    # This will fail because _:x is already assigned to 42 .\n    # _:x log:equalTo 17 .\n}\n=>\n{\n    :result :is ?q .\n} . \n            ".
_:bn_66 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{\n    ( ?x ?y ?z ) log:equalTo ( 1 2 3 )\n}\n=>\n{\n    :result :is ?x , ?y , ?z .\n} . \n            ".
_:bn_67 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{\n    ( \"War and Peace\" \"Leo Tolstoy\" 1225 ) log:equalTo ( ?title ?author ?numPages ) .\n}\n=>\n{\n    :result :is ?title , ?author , ?numPages .\n} . \n            ".
_:bn_70 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n:c a :CompositeTask ;\n    :subTask :s1 , :s2 , :s3 .\n:s1 :state :Completed .\n:s2 :state :Completed . \n:s3 :state :Completed .\n\n{\n    ?c a :CompositeTask .\n    ( { ?c :subTask ?s } { ?s :state :Completed } ) log:forAllIn _:t .\n}\n=>\n{\n    :result :is true .\n} . \n            ".
_:bn_75 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{ \n    { :Felix a :Cat } log:includes { ?X a :Cat } .\n} \n=>\n{\n    :result :is ?X .\n} .\n            ".
_:bn_78 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{\n    1 log:notEqualTo 2 .\n    \"Cat\" log:notEqualTo \"CAT\" .\n    { :A :B :C . } log:notEqualTo { :C :B :A . } .\n}\n=>\n{\n    :result :is true .\n} . \n            ".
_:bn_79 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{\n    \"Cat\" log:notEqualTo \"Cat\"@en .\n}\n=>\n{\n    :result :is true .\n} . \n            ".
_:bn_80 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{\n    _:x log:notEqualTo 42 .\n    ?q  log:notEqualTo \"Cat\"@en .\n}\n=>\n{\n    :result :is true .\n} . \n            ".
_:bn_83 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{ \n    { :Felix a :Cat } log:notIncludes { ?X :eats ?Y } .\n} \n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_84 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{ \n    # Dynamic evaluation of ?X and ?Y\n    ?X log:notIncludes ?Y .\n    ?X log:equalTo { :a :b :c }.\n    ?Y log:equalTo { :a :b :d }.\n} \n=>              \n{\n    :result :is true .\n} .\n            ".
_:bn_87 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n_:2 log:outputString \"This is the second line\n\" .\n_:1 log:outputString \"This is the first line\n\" .\n            ".
_:bn_90 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n:Let :param \"\"\"\n@prefix : <urn:example:> .\n:Socrates a :Human .\n\"\"\" .\n\n{\n    :Let :param ?X .\n    ?X log:parsedAsN3 ?Y .\n}\n=>\n{\n    :result :is ?Y .\n} .\n            ".
_:bn_93 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{\n    \"Hello\" log:rawType ?stringType .\n    42 log:rawType ?integerType .\n    true log:rawType ?trueType .\n    false log:rawType ?falseType .\n}\n=>\n{\n    :result :is ( ?stringType ?integerType ?trueType ?falseType ) .\n} .\n            ".
_:bn_94 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{\n    <http://www.w3c.org> log:rawType ?resourceType .\n}\n=>\n{\n    :result :is ?resourceType .\n} .\n            ".
_:bn_95 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{\n    (1 2 3 4) log:rawType ?listType .\n    { :s :p :o } log:rawType ?graphType .\n} \n=>\n{\n    :result :is ( ?listType ?graphType ) .\n} .\n            ".
_:bn_98 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{ <semantics.data> log:semantics ?semantics . } => { :result :is ?semantics } .\n            ".
_:bn_101 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{ <error.data> log:semantics ?semantics . } => { :result :is ?semantics } .\n            ".
_:bn_104 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{ (:abc 77 \"xyz\") log:skolem ?skolem . } => { :result :is ?skolem } .\n            ".
_:bn_107 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n\n{ <https://www.w3.org> log:uri ?uri . } => { :result :is ?uri . } .\n            ".
_:bn_110 fno:expression "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n{ (\"hello\" \"en\") log:langlit ?X } => { ?X a :Result } .\n            ".
_:bn_115 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param -2 .\n\n{\n    :Let :param ?param .\n    ?param math:absoluteValue ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_120 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param 1 .\n\n{\n    :Let :param ?param .\n    ?param math:acos ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_125 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param 1 .\n\n{\n    :Let :param ?param .\n    ?param math:asin ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_130 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param 1 .\n\n{\n    :Let :param ?param .\n    ?param math:atan ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_135 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param 0 .\n\n{\n    :Let :param ?param .\n    ?param math:cos ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_140 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param 0 .\n\n{\n    :Let :param ?param .\n    ?param math:cosh ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_145 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param 1.57079632679 .\n\n{\n    :Let :param ?param .\n    ?param math:degrees ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_150 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (7 2) .\n\n{\n    :Let :param ?param .\n    ?param math:difference ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_158 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (42 42) .\n\n{\n    :Let :param (?X ?Y) .\n    ?X math:equalTo ?Y .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_163 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (7 2) .\n\n{\n    :Let :param ?param .\n    ?param math:exponentiation ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_164 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n{\n    (7 ?result) math:exponentiation 49 .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_172 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (42 41) .\n\n{\n    :Let :param (?X ?Y) .\n    ?X math:greaterThan ?Y .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_177 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (41 42) .\n\n{\n    :Let :param (?X ?Y) .\n    ?X math:lessThan ?Y .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_182 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param 42 .\n\n{\n    :Let :param ?param .\n    ?param math:negation ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_187 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (41 42) .\n\n{\n    :Let :param (?X ?Y) .\n    ?X math:notEqualTo ?Y .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_192 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (41 42) .\n\n{\n    :Let :param (?X ?Y) .\n    ?X math:notGreaterThan ?Y .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_197 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (42 41) .\n\n{\n    :Let :param (?X ?Y) .\n    ?X math:notLessThan ?Y .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_202 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (2 21) .\n\n{\n    :Let :param ?param .\n    ?param math:product ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_203 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (2 4 6 8) .\n\n{\n    :Let :param ?param .\n    ?param math:product ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_209 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (42 2) .\n\n{\n    :Let :param ?param .\n    ?param math:quotient ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_217 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (10 3) .\n\n{\n    :Let :param ?param .\n    ?param math:remainder ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_222 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n:Let :param \"3.3\"^^xsd:double .\n\n{\n    :Let :param ?param .\n    ?param math:rounded ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_226 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n:Let :param \"1.57079632679\"^^xsd:double .\n\n{\n    :Let :param ?param .\n    ?param math:sin ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_231 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n:Let :param \"0.88137358701954302\"^^xsd:double.\n\n{\n    :Let :param ?param .\n    ?param math:sinh ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_236 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n\n:Let :param (1 2 3 4 5 6 7 8 9 10) .\n\n{\n    :Let :param ?param .\n    ?param math:sum ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_242 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n:Let :param \"0.7853981633974483\"^^xsd:double .\n\n{\n    :Let :param ?param .\n    ?param math:tan ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_247 fno:expression "\n@prefix : <http://example.org/>.\n@prefix math: <http://www.w3.org/2000/10/swap/math#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n:Let :param \"0.549306\"^^xsd:double .\n\n{\n    :Let :param ?param .\n    ?param math:tanh ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_252 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param ( \"hello\" \" \" \"world!\" ) .\n\n{\n    :Let :param ?param .\n    ?param string:concatenation ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_256 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"hello world!\" .\n:Let :param2 \"llo worl\".\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:contains ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_259 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"hello world!\" .\n:Let :param2 \"lLO woRl\".\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:containsIgnoringCase ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_262 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"hello world!\" .\n:Let :param2 \"orld!\".\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:endsWith ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_265 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"hello world!\" .\n:Let :param2 \"hELLo wORld!\" .\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:equalIgnoringCase ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_268 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param ( \"%s://%s/%s\" \"https\" \"w3c.github.io\" \"N3/spec/\" ) .\n\n{\n    :Let :param ?param .\n    ?param string:format ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_272 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"Penguin\" .\n:Let :param2 \"Cat\".\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:greaterThan ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_275 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"Cat\" .\n:Let :param2 \"Penguin\".\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:lessThan ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_278 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"hello world!\" .\n:Let :param2 \".*(l)+o wo.*\".\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:matches ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_281 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"hello world!\" .\n:Let :param2 \"hELLo dunia!\" .\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:notEqualIgnoringCase ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_284 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"Cat\" .\n:Let :param2 \"Penguin\".\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:notGreaterThan ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_287 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"Penguin\".\n:Let :param2 \"Cat\" .\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:notLessThan ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_290 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"hello world!\" .\n:Let :param2 \".*(l)+o dunia.*\".\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:notMatches ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_293 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :data \"hello world!\" .\n:Let :search \"(l)\" .\n:Let :replace \"[$1]\" .\n{\n    :Let :data ?data .\n    :Let :search ?search .\n    :Let :replace ?replace .\n    (?data ?search ?replace) string:replace ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_299 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"https://w3c.github.io/N3/spec/\" . \n:Let :param2 \".*/([^/]+/)$\" .\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    (?param1 ?param2) string:scrape ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_304 fno:expression "\n@prefix : <http://example.org/>.\n@prefix string: <http://www.w3.org/2000/10/swap/string#> .\n\n:Let :param1 \"hello world!\" .\n:Let :param2 \"hello\".\n{\n    :Let :param1 ?param1 .\n    :Let :param2 ?param2 .\n    ?param1 string:startsWith ?param2 .\n}\n=>\n{\n    :result :is true .\n} .\n            ".
_:bn_307 fno:expression "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\n@prefix time: <http://www.w3.org/2000/10/swap/time#> .\n\n:Let :param \"2023-04-01T18:06:04Z\"^^xsd:dateTime .\n\n{\n    :Let :param ?param .\n    ?param time:day ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_310 fno:expression "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\n@prefix time: <http://www.w3.org/2000/10/swap/time#> .\n\n:Let :param \"2023-04-01T18:06:04Z\"^^xsd:dateTime .\n\n{\n    :Let :param ?param .\n    ?param time:minute ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_313 fno:expression "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\n@prefix time: <http://www.w3.org/2000/10/swap/time#> .\n\n:Let :param \"2023-04-01T18:06:04Z\"^^xsd:dateTime .\n\n{\n    :Let :param ?param .\n    ?param time:month ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_316 fno:expression "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\n@prefix time: <http://www.w3.org/2000/10/swap/time#> .\n\n:Let :param \"2023-04-01T18:06:04Z\"^^xsd:dateTime .\n\n{\n    :Let :param ?param .\n    ?param time:second ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_319 fno:expression "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\n@prefix time: <http://www.w3.org/2000/10/swap/time#> .\n\n:Let :param \"2023-04-01T18:06:04Z\"^^xsd:dateTime .\n\n{\n    :Let :param ?param .\n    ?param time:minute ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_322 fno:expression "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\n@prefix time: <http://www.w3.org/2000/10/swap/time#> .\n\n:Let :param \"2023-04-01T18:06:04Z\"^^xsd:dateTime .\n\n{\n    :Let :param ?param .\n    ?param time:year ?result .\n}\n=>\n{\n    :result :is ?result .\n} .\n            ".
_:bn_1 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"2aae6c35c94fcfb415dbe95f408b9ce91ee846ed\" .\n            ".
_:bn_4 fno:result "\n@prefix : <http://example.org/>.\n:result :is (1 2 3 4). \n            ".
_:bn_5 fno:result "\n@prefix : <http://example.org/>.\n:result :is (1 2). \n            ".
_:bn_6 fno:result "\n@prefix : <http://example.org/>.\n:result :is (3 4). \n            ".
_:bn_7 fno:result "\n@prefix : <http://example.org/>.\n:result :is true. \n            ".
_:bn_11 fno:result "\n@prefix : <http://example.org/>.\n:result :is ('a'). \n            ".
_:bn_14 fno:result "\n@prefix : <http://example.org/>.\n:result :is true. \n            ".
_:bn_15 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"dog\" .\n:result :is \"penguin\" . \n:result :is \"cat\" .\n            ".
_:bn_18 fno:result "\n@prefix : <http://example.org/>.\n:result :is (0 \"dog\") .\n:result :is (1 \"penguin\") .\n:result :is (2 \"cat\") .\n            ".
_:bn_19 fno:result "\n@prefix : <http://example.org/>.\n:result :is true .\n            ".
_:bn_20 fno:result "\n@prefix : <http://example.org/>.\n:result :is 2 .\n            ".
_:bn_25 fno:result "\n@prefix : <http://example.org/>.\n:result :is 4. \n            ".
_:bn_26 fno:result "\n@prefix : <http://example.org/>.\n:result :is true. \n            ".
_:bn_29 fno:result "\n@prefix : <http://example.org/>.\n:result :is 4. \n            ".
_:bn_32 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"dog\".\n:result :is \"penguin\".\n:result :is \"cat\".\n            ".
_:bn_33 fno:result "\n@prefix : <http://example.org/>.\n:result :is true.\n            ".
_:bn_36 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"cat\" .\n            ".
_:bn_37 fno:result "\n@prefix : <http://example.org/>.\n:result :is 1 .\n:result :is 3 .\n            ".
_:bn_42 fno:result "\n@prefix : <http://example.org/>.\n:result :is (\"dog\" \"cat\").\n            ".
_:bn_47 fno:result "\n@prefix : <http://example.org/>.\n:result :is {\n    :Felix a :Cat. \n    :Felix :says \"Meow\". \n    { ?S a :Cat . } => { ?S :says \"Meow\" . } .\n} .\n            ".
_:bn_50 fno:result "\n@prefix : <http://example.org/>.\n:result :is { \n    :Felix a :Cat . \n    :Pingu a :Penguin . \n    :Pluto a :Dog . \n} .\n            ".
_:bn_54 fno:result "\n:result :is \"...the content of https://www.w3.org/People/Berners-Lee/card ...\". \n            ".
_:bn_57 fno:result "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n:result :is \"1971-05-05\"^^xsd:date.\n            ".
_:bn_58 fno:result "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n:result :is (\"1971-05-05\" xsd:date).\n            ".
_:bn_63 fno:result "\n@prefix : <http://example.org/>.\n:result :is true. \n            ".
_:bn_64 fno:result "\n@prefix : <http://example.org/>.\n# no results\n            ".
_:bn_65 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"Cat\"@en .\n            ".
_:bn_66 fno:result "\n@prefix : <http://example.org/>.\n:result :is 1 , 2 , 3 . # objects can be in any order\n            ".
_:bn_67 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"War and Peace\" , \"Leo Tolstoy\" , 1225 . # objects can be in any order\n            ".
_:bn_70 fno:result "\n@prefix : <http://example.org/>.\n:result :is true. \n            ".
_:bn_75 fno:result "\n@prefix : <http://example.org/>.\n:result :is :Felix .\n            ".
_:bn_78 fno:result "\n@prefix : <http://example.org/>.\n:result :is true .\n            ".
_:bn_79 fno:result "\n@prefix : <http://example.org/>.\n:result :is true .\n            ".
_:bn_80 fno:result "\n@prefix : <http://example.org/>.\n# no result (the variables _:x and ?q are not bounded) \n            ".
_:bn_83 fno:result "\n@prefix : <http://example.org/>.\n:result :is true.\n            ".
_:bn_84 fno:result "\n@prefix : <http://example.org/>.\n:result :is true.\n            ".
_:bn_87 fno:result "\n# If the reasoner support the outputString options\nThis is the first line\nThis is the second line\n            ".
_:bn_90 fno:result "\n@prefix : <http://example.org/>.\n:result :is { <urn:example:Socrates> a <urn:example:Human> . } .\n            ".
_:bn_93 fno:result "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n:result :is ( log:Literal log:Literal log:Literal log:Literal ) .\n            ".
_:bn_94 fno:result "\n@prefix : <http://example.org/>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n:result :is log:Other.\n            ".
_:bn_95 fno:result "\n@prefix : <http://example.org/>.\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\n@prefix log: <http://www.w3.org/2000/10/swap/log#> .\n:result :is ( rdf:List log:Formula ) .\n            ".
_:bn_98 fno:result "\n@prefix : <http://example.org/>.\n:result :is { :Socrates a :Human . } .\n            ".
_:bn_101 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"\"\"Unable to access document <file:////tmp/error.data>, because:\n    <urlopen error [Errno 2] No such file or directory: '//tmp/error.data'>\"\"\" .\n            ".
_:bn_104 fno:result "\n@prefix : <http://example.org/>.\n:result :is <http://www.w3.org/2000/10/swap/genid#zmgk3Vt_z_u7FQlk1NmqIw> . \n            ".
_:bn_107 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"https://www.w3.org\" .\n            ".
_:bn_110 fno:result "\n@prefix : <http://example.org/>.\n\"hello\"@en a :Result .\n            ".
_:bn_115 fno:result "\n@prefix : <http://example.org/>.\n:result :is 2. \n            ".
_:bn_120 fno:result "\n@prefix : <http://example.org/>.\n:result :is 0.0 .\n            ".
_:bn_125 fno:result "\n@prefix : <http://example.org/>.\n:result :is 1.5707963267948966 .\n            ".
_:bn_130 fno:result "\n@prefix : <http://example.org/>.\n:result :is 0.7853981633974483 .\n            ".
_:bn_135 fno:result "\n@prefix : <http://example.org/>.\n:result :is 1.0 .\n            ".
_:bn_140 fno:result "\n@prefix : <http://example.org/>.\n:result :is 1.0 .\n            ".
_:bn_145 fno:result "\n@prefix : <http://example.org/>.\n:result :is 89.99999999971946 .\n            ".
_:bn_150 fno:result "\n@prefix : <http://example.org/>.\n:result :is 5.\n            ".
_:bn_158 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_163 fno:result "\n@prefix : <http://example.org/>.\n:result :is 49 .\n            ".
_:bn_164 fno:result "\n@prefix : <http://example.org/>.\n:result :is 2.0 .\n            ".
_:bn_172 fno:result "\n@prefix : <http://example.org/>.\n:result :is true .\n            ".
_:bn_177 fno:result "\n@prefix : <http://example.org/>.\n:result :is true .\n            ".
_:bn_182 fno:result "\n@prefix : <http://example.org/>.\n:result :is -42 .\n            ".
_:bn_187 fno:result "\n@prefix : <http://example.org/>.\n:result :is true .\n            ".
_:bn_192 fno:result "\n@prefix : <http://example.org/>.\n:result :is true .\n            ".
_:bn_197 fno:result "\n@prefix : <http://example.org/>.\n:result :is true .\n            ".
_:bn_202 fno:result "\n@prefix : <http://example.org/>.\n:result :is 42.\n            ".
_:bn_203 fno:result "\n@prefix : <http://example.org/>.\n:result :is 384.\n            ".
_:bn_209 fno:result "\n@prefix : <http://example.org/>.\n:result :is 21. \n            ".
_:bn_217 fno:result "\n@prefix : <http://example.org/>.\n:result :is 1.\n            ".
_:bn_222 fno:result "\n@prefix : <http://example.org/>.\n:result :is 3. \n            ".
_:bn_226 fno:result "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n:result :is \"1.0\"^^xsd:double . \n            ".
_:bn_231 fno:result "\n@prefix : <http://example.org/>.\n:result :is 1.0.\n            ".
_:bn_236 fno:result "\n@prefix : <http://example.org/>.\n:result :is 55.\n            ".
_:bn_242 fno:result "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n:result :is \"0.9999999999999999\"^^xsd:double. \n            ".
_:bn_247 fno:result "\n@prefix : <http://example.org/>.\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n:result :is \"0.49999989174945103\"^^xsd:double. \n            ".
_:bn_252 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"hello world!\". \n            ".
_:bn_256 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_259 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_262 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_265 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_268 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"https://w3c.github.io/N3/spec/\". \n            ".
_:bn_272 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_275 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_278 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_281 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_284 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_287 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_290 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_293 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"he[l][l]o wor[l]d!\". \n            ".
_:bn_299 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"spec/\". \n            ".
_:bn_304 fno:result "\n@prefix : <http://example.org/>.\n:result :is true . \n            ".
_:bn_307 fno:result "\n@prefix : <http://example.org/>.\n:result :is 1. \n            ".
_:bn_310 fno:result "\n@prefix : <http://example.org/>.\n:result :is 6. \n            ".
_:bn_313 fno:result "\n@prefix : <http://example.org/>.\n:result :is 4. \n            ".
_:bn_316 fno:result "\n@prefix : <http://example.org/>.\n:result :is 4. \n            ".
_:bn_319 fno:result "\n@prefix : <http://example.org/>.\n:result :is \"Z\". \n            ".
_:bn_322 fno:result "\n@prefix : <http://example.org/>.\n:result :is 2023. \n            ".
crypto:sha fno:name "SHA-1 hash".
list:append fno:name "append".
list:first fno:name "first".
list:in fno:name "in".
list:iterate fno:name "iterate".
list:last fno:name "last".
list:length fno:name "length".
list:member fno:name "member".
list:memberAt fno:name "memberAt".
list:remove fno:name "remove".
log:conclusion fno:name "conclusion".
log:conjunction fno:name "conjunction".
log:content fno:name "content".
log:dtlit fno:name "dtlit".
log:equalTo fno:name "equalTo".
log:forAllIn fno:name "forAllIn".
log:includes fno:name "includes".
log:notEqualTo fno:name "notEqualTo".
log:notIncludes fno:name "notIncludes".
log:outputString fno:name "outputString".
log:parsedAsN3 fno:name "parsedAsN3".
log:rawType fno:name "rawType".
log:semantics fno:name "semantics".
log:semanticsOrError fno:name "semanticsOrError".
log:skolem fno:name "skolem".
log:uri fno:name "uri".
log:langlit fno:name "langlit".
math:absoluteValue fno:name "absoluteValue".
math:acos fno:name "acos".
math:asin fno:name "asin".
math:atan fno:name "atan".
math:cos fno:name "cos".
math:cosh fno:name "cosh".
math:degrees fno:name "degrees".
math:difference fno:name "difference".
math:equalTo fno:name "equalTo".
math:exponentiation fno:name "exponentiation".
math:greaterThan fno:name "greaterThan".
math:lessThan fno:name "lessThan".
math:negation fno:name "negation".
math:notEqualTo fno:name "notEqualTo".
math:notGreaterThan fno:name "notGreaterThan".
math:notLessThan fno:name "notlessThan".
math:product fno:name "product".
math:quotient fno:name "quotient".
math:remainder fno:name "remainder".
math:rounded fno:name "rounded".
math:sin fno:name "sin".
math:sinh fno:name "sinh".
math:sum fno:name "sum".
math:tan fno:name "tan".
math:tanh fno:name "tanh".
string:concatenation fno:name "concatenation".
string:contains fno:name "contains".
string:containsIgnoringCase fno:name "containsIgnoringCase".
string:endsWith fno:name "endsWith".
string:equalIgnoringCase fno:name "equalIgnoringCase".
string:format fno:name "format".
string:greaterThan fno:name "greaterThan".
string:lessThan fno:name "lessThan".
string:matches fno:name "matches".
string:notEqualIgnoringCase fno:name "notEqualIgnoringCase".
string:notGreaterThan fno:name "notGreaterThan".
string:notLessThan fno:name "notLessThan".
string:notMatches fno:name "notMatches".
string:replace fno:name "replace".
string:scrape fno:name "scrape".
string:startsWith fno:name "startsWith".
time:day fno:name "day".
time:minute fno:name "minute".
time:month fno:name "month".
time:second fno:name "second".
time:timeZone fno:name "timeZone".
time:year fno:name "year".
crypto:sha fno:parameter (_:bn_2 _:bn_3).
list:append fno:parameter (_:bn_8 _:bn_10).
list:first fno:parameter (_:bn_12 _:bn_13).
list:in fno:parameter (_:bn_16 _:bn_17).
list:iterate fno:parameter (_:bn_21 _:bn_22).
list:last fno:parameter (_:bn_27 _:bn_28).
list:length fno:parameter (_:bn_30 _:bn_31).
list:member fno:parameter (_:bn_34 _:bn_35).
list:memberAt fno:parameter (_:bn_38 _:bn_41).
list:remove fno:parameter (_:bn_43 _:bn_46).
log:conclusion fno:parameter (_:bn_48 _:bn_49).
log:conjunction fno:parameter (_:bn_51 _:bn_53).
log:content fno:parameter (_:bn_55 _:bn_56).
log:dtlit fno:parameter (_:bn_59 _:bn_62).
log:equalTo fno:parameter (_:bn_68 _:bn_69).
log:forAllIn fno:parameter (_:bn_71 _:bn_74).
log:includes fno:parameter (_:bn_76 _:bn_77).
log:notEqualTo fno:parameter (_:bn_81 _:bn_82).
log:notIncludes fno:parameter (_:bn_85 _:bn_86).
log:outputString fno:parameter (_:bn_88 _:bn_89).
log:parsedAsN3 fno:parameter (_:bn_91 _:bn_92).
log:rawType fno:parameter (_:bn_96 _:bn_97).
log:semantics fno:parameter (_:bn_99 _:bn_100).
log:semanticsOrError fno:parameter (_:bn_102 _:bn_103).
log:skolem fno:parameter (_:bn_105 _:bn_106).
log:uri fno:parameter (_:bn_108 _:bn_109).
log:langlit fno:parameter (_:bn_111 _:bn_114).
math:absoluteValue fno:parameter (_:bn_116 _:bn_118).
math:acos fno:parameter (_:bn_121 _:bn_123).
math:asin fno:parameter (_:bn_126 _:bn_128).
math:atan fno:parameter (_:bn_131 _:bn_133).
math:cos fno:parameter (_:bn_136 _:bn_138).
math:cosh fno:parameter (_:bn_141 _:bn_143).
math:degrees fno:parameter (_:bn_146 _:bn_148).
math:difference fno:parameter (_:bn_151 _:bn_156).
math:equalTo fno:parameter (_:bn_159 _:bn_161).
math:exponentiation fno:parameter (_:bn_165 _:bn_170).
math:greaterThan fno:parameter (_:bn_173 _:bn_175).
math:lessThan fno:parameter (_:bn_178 _:bn_180).
math:negation fno:parameter (_:bn_183 _:bn_185).
math:notEqualTo fno:parameter (_:bn_188 _:bn_190).
math:notGreaterThan fno:parameter (_:bn_193 _:bn_195).
math:notLessThan fno:parameter (_:bn_198 _:bn_200).
math:product fno:parameter (_:bn_204 _:bn_207).
math:quotient fno:parameter (_:bn_210 _:bn_215).
math:remainder fno:parameter (_:bn_218 _:bn_221).
math:rounded fno:parameter (_:bn_223 _:bn_225).
math:sin fno:parameter (_:bn_227 _:bn_229).
math:sinh fno:parameter (_:bn_232 _:bn_234).
math:sum fno:parameter (_:bn_237 _:bn_240).
math:tan fno:parameter (_:bn_243 _:bn_245).
math:tanh fno:parameter (_:bn_248 _:bn_250).
string:concatenation fno:parameter (_:bn_253 _:bn_255).
string:contains fno:parameter (_:bn_257 _:bn_258).
string:containsIgnoringCase fno:parameter (_:bn_260 _:bn_261).
string:endsWith fno:parameter (_:bn_263 _:bn_264).
string:equalIgnoringCase fno:parameter (_:bn_266 _:bn_267).
string:format fno:parameter (_:bn_269 _:bn_271).
string:greaterThan fno:parameter (_:bn_273 _:bn_274).
string:lessThan fno:parameter (_:bn_276 _:bn_277).
string:matches fno:parameter (_:bn_279 _:bn_280).
string:notEqualIgnoringCase fno:parameter (_:bn_282 _:bn_283).
string:notGreaterThan fno:parameter (_:bn_285 _:bn_286).
string:notLessThan fno:parameter (_:bn_288 _:bn_289).
string:notMatches fno:parameter (_:bn_291 _:bn_292).
string:replace fno:parameter (_:bn_294 _:bn_298).
string:scrape fno:parameter (_:bn_300 _:bn_303).
string:startsWith fno:parameter (_:bn_305 _:bn_306).
time:day fno:parameter (_:bn_308 _:bn_309).
time:minute fno:parameter (_:bn_311 _:bn_312).
time:month fno:parameter (_:bn_314 _:bn_315).
time:second fno:parameter (_:bn_317 _:bn_318).
time:timeZone fno:parameter (_:bn_320 _:bn_321).
time:year fno:parameter (_:bn_323 _:bn_324).
_:bn_2 fno:mode "+".
_:bn_3 fno:mode "-".
_:bn_8 fno:mode "+".
_:bn_9 fno:mode "?[*]".
_:bn_10 fno:mode "?".
_:bn_12 fno:mode "+".
_:bn_13 fno:mode "-".
_:bn_16 fno:mode "-[*]".
_:bn_17 fno:mode "+".
_:bn_21 fno:mode "+".
_:bn_22 fno:mode "?[*]".
_:bn_23 fno:mode "?[*]".
_:bn_24 fno:mode "?[*]".
_:bn_27 fno:mode "+".
_:bn_28 fno:mode "-".
_:bn_30 fno:mode "+".
_:bn_31 fno:mode "-".
_:bn_34 fno:mode "+".
_:bn_35 fno:mode "-[*]".
_:bn_38 fno:mode "+".
_:bn_39 fno:mode "+".
_:bn_40 fno:mode "?[*]".
_:bn_41 fno:mode "?[*]".
_:bn_43 fno:mode "+".
_:bn_44 fno:mode "+".
_:bn_45 fno:mode "+".
_:bn_46 fno:mode "-".
_:bn_48 fno:mode "+".
_:bn_49 fno:mode "?".
_:bn_51 fno:mode "+".
_:bn_52 fno:mode "+".
_:bn_53 fno:mode "?".
_:bn_55 fno:mode "+".
_:bn_56 fno:mode "?".
_:bn_59 fno:mode "?".
_:bn_60 fno:mode "?".
_:bn_61 fno:mode "?".
_:bn_62 fno:mode "?".
_:bn_68 fno:mode "?".
_:bn_69 fno:mode "?".
_:bn_71 fno:mode "+".
_:bn_72 fno:mode "+".
_:bn_73 fno:mode "+".
_:bn_74 fno:mode "?".
_:bn_76 fno:mode "+".
_:bn_77 fno:mode "+".
_:bn_81 fno:mode "+".
_:bn_82 fno:mode "+".
_:bn_85 fno:mode "+".
_:bn_86 fno:mode "+".
_:bn_88 fno:mode "+".
_:bn_89 fno:mode "+".
_:bn_91 fno:mode "+".
_:bn_92 fno:mode "-".
_:bn_96 fno:mode "+".
_:bn_97 fno:mode "-".
_:bn_99 fno:mode "+".
_:bn_100 fno:mode "?".
_:bn_102 fno:mode "+".
_:bn_103 fno:mode "?".
_:bn_105 fno:mode "+".
_:bn_106 fno:mode "-".
_:bn_108 fno:mode "?".
_:bn_109 fno:mode "?".
_:bn_111 fno:mode "?".
_:bn_112 fno:mode "?".
_:bn_113 fno:mode "?".
_:bn_114 fno:mode "?".
_:bn_116 fno:mode "+".
_:bn_118 fno:mode "-".
_:bn_121 fno:mode "?".
_:bn_123 fno:mode "?".
_:bn_126 fno:mode "?".
_:bn_128 fno:mode "?".
_:bn_131 fno:mode "?".
_:bn_133 fno:mode "?".
_:bn_136 fno:mode "?".
_:bn_138 fno:mode "?".
_:bn_141 fno:mode "?".
_:bn_143 fno:mode "?".
_:bn_146 fno:mode "?".
_:bn_148 fno:mode "?".
_:bn_151 fno:mode "+".
_:bn_152 fno:mode "+".
_:bn_154 fno:mode "+".
_:bn_156 fno:mode "-".
_:bn_159 fno:mode "?".
_:bn_161 fno:mode "?".
_:bn_165 fno:mode "+".
_:bn_166 fno:mode "+".
_:bn_168 fno:mode "?".
_:bn_170 fno:mode "?".
_:bn_173 fno:mode "+".
_:bn_175 fno:mode "+".
_:bn_178 fno:mode "+".
_:bn_180 fno:mode "+".
_:bn_183 fno:mode "?".
_:bn_185 fno:mode "?".
_:bn_188 fno:mode "+".
_:bn_190 fno:mode "+".
_:bn_193 fno:mode "+".
_:bn_195 fno:mode "+".
_:bn_198 fno:mode "+".
_:bn_200 fno:mode "+".
_:bn_204 fno:mode "+".
_:bn_205 fno:mode "+".
_:bn_207 fno:mode "-".
_:bn_210 fno:mode "+".
_:bn_211 fno:mode "+".
_:bn_213 fno:mode "+".
_:bn_215 fno:mode "-".
_:bn_218 fno:mode "+".
_:bn_219 fno:mode "+".
_:bn_220 fno:mode "+".
_:bn_221 fno:mode "-".
_:bn_223 fno:mode "+".
_:bn_225 fno:mode "-".
_:bn_227 fno:mode "?".
_:bn_229 fno:mode "?".
_:bn_232 fno:mode "?".
_:bn_234 fno:mode "?".
_:bn_237 fno:mode "+".
_:bn_238 fno:mode "+".
_:bn_240 fno:mode "-".
_:bn_243 fno:mode "?".
_:bn_245 fno:mode "?".
_:bn_248 fno:mode "?".
_:bn_250 fno:mode "?".
_:bn_253 fno:mode "+".
_:bn_254 fno:mode "+".
_:bn_255 fno:mode "-".
_:bn_257 fno:mode "+".
_:bn_258 fno:mode "+".
_:bn_260 fno:mode "+".
_:bn_261 fno:mode "+".
_:bn_263 fno:mode "+".
_:bn_264 fno:mode "+".
_:bn_266 fno:mode "+".
_:bn_267 fno:mode "+".
_:bn_269 fno:mode "+".
_:bn_270 fno:mode "+".
_:bn_271 fno:mode "-".
_:bn_273 fno:mode "+".
_:bn_274 fno:mode "+".
_:bn_276 fno:mode "+".
_:bn_277 fno:mode "+".
_:bn_279 fno:mode "+".
_:bn_280 fno:mode "+".
_:bn_282 fno:mode "+".
_:bn_283 fno:mode "+".
_:bn_285 fno:mode "+".
_:bn_286 fno:mode "+".
_:bn_288 fno:mode "+".
_:bn_289 fno:mode "+".
_:bn_291 fno:mode "+".
_:bn_292 fno:mode "+".
_:bn_294 fno:mode "+".
_:bn_295 fno:mode "+".
_:bn_296 fno:mode "+".
_:bn_297 fno:mode "+".
_:bn_298 fno:mode "-".
_:bn_300 fno:mode "+".
_:bn_301 fno:mode "+".
_:bn_302 fno:mode "+".
_:bn_303 fno:mode "-".
_:bn_305 fno:mode "+".
_:bn_306 fno:mode "+".
_:bn_308 fno:mode "+".
_:bn_309 fno:mode "-".
_:bn_311 fno:mode "+".
_:bn_312 fno:mode "-".
_:bn_314 fno:mode "+".
_:bn_315 fno:mode "-".
_:bn_317 fno:mode "+".
_:bn_318 fno:mode "-".
_:bn_320 fno:mode "+".
_:bn_321 fno:mode "-".
_:bn_323 fno:mode "+".
_:bn_324 fno:mode "-".
_:bn_2 fno:predicate "$s".
_:bn_3 fno:predicate "$o".
_:bn_8 fno:predicate "$s".
_:bn_9 fno:predicate "$s.i".
_:bn_10 fno:predicate "$o".
_:bn_12 fno:predicate "$s".
_:bn_13 fno:predicate "$o".
_:bn_16 fno:predicate "$s".
_:bn_17 fno:predicate "$o".
_:bn_21 fno:predicate "$s".
_:bn_22 fno:predicate "$o".
_:bn_23 fno:predicate "$o.1".
_:bn_24 fno:predicate "$o.2".
_:bn_27 fno:predicate "$s".
_:bn_28 fno:predicate "$o".
_:bn_30 fno:predicate "$s".
_:bn_31 fno:predicate "$o".
_:bn_34 fno:predicate "$s".
_:bn_35 fno:predicate "$o".
_:bn_38 fno:predicate "$s".
_:bn_39 fno:predicate "$s.1".
_:bn_40 fno:predicate "$s.2".
_:bn_41 fno:predicate "$o".
_:bn_43 fno:predicate "$s".
_:bn_44 fno:predicate "$s.1".
_:bn_45 fno:predicate "$s.2".
_:bn_46 fno:predicate "$o".
_:bn_48 fno:predicate "$s".
_:bn_49 fno:predicate "$o".
_:bn_51 fno:predicate "$s".
_:bn_52 fno:predicate "$s.i".
_:bn_53 fno:predicate "$o".
_:bn_55 fno:predicate "$s".
_:bn_56 fno:predicate "$o".
_:bn_59 fno:predicate "$s".
_:bn_60 fno:predicate "$s.1".
_:bn_61 fno:predicate "$s.2".
_:bn_62 fno:predicate "$o".
_:bn_68 fno:predicate "$s".
_:bn_69 fno:predicate "$o".
_:bn_71 fno:predicate "$s".
_:bn_72 fno:predicate "$s.1".
_:bn_73 fno:predicate "$s.2".
_:bn_74 fno:predicate "$o".
_:bn_76 fno:predicate "$s".
_:bn_77 fno:predicate "$o".
_:bn_81 fno:predicate "$s".
_:bn_82 fno:predicate "$o".
_:bn_85 fno:predicate "$s".
_:bn_86 fno:predicate "$o".
_:bn_88 fno:predicate "$s".
_:bn_89 fno:predicate "$o".
_:bn_91 fno:predicate "$s".
_:bn_92 fno:predicate "$o".
_:bn_96 fno:predicate "$s".
_:bn_97 fno:predicate "$o".
_:bn_99 fno:predicate "$s".
_:bn_100 fno:predicate "$o".
_:bn_102 fno:predicate "$s".
_:bn_103 fno:predicate "$o".
_:bn_105 fno:predicate "$s".
_:bn_106 fno:predicate "$o".
_:bn_108 fno:predicate "$s".
_:bn_109 fno:predicate "$o".
_:bn_111 fno:predicate "$s".
_:bn_112 fno:predicate "$s.1".
_:bn_113 fno:predicate "$s.2".
_:bn_114 fno:predicate "$o".
_:bn_116 fno:predicate "$s".
_:bn_118 fno:predicate "$o".
_:bn_121 fno:predicate "$s".
_:bn_123 fno:predicate "$o".
_:bn_126 fno:predicate "$s".
_:bn_128 fno:predicate "$o".
_:bn_131 fno:predicate "$s".
_:bn_133 fno:predicate "$o".
_:bn_136 fno:predicate "$s".
_:bn_138 fno:predicate "$o".
_:bn_141 fno:predicate "$s".
_:bn_143 fno:predicate "$o".
_:bn_146 fno:predicate "$s".
_:bn_148 fno:predicate "$o".
_:bn_151 fno:predicate "$s".
_:bn_152 fno:predicate "$s.1".
_:bn_154 fno:predicate "$s.2".
_:bn_156 fno:predicate "$o".
_:bn_159 fno:predicate "$s".
_:bn_161 fno:predicate "$o".
_:bn_165 fno:predicate "$s".
_:bn_166 fno:predicate "$s.1".
_:bn_168 fno:predicate "$s.2".
_:bn_170 fno:predicate "$o".
_:bn_173 fno:predicate "$s".
_:bn_175 fno:predicate "$o".
_:bn_178 fno:predicate "$s".
_:bn_180 fno:predicate "$o".
_:bn_183 fno:predicate "$s".
_:bn_185 fno:predicate "$o".
_:bn_188 fno:predicate "$s".
_:bn_190 fno:predicate "$o".
_:bn_193 fno:predicate "$s".
_:bn_195 fno:predicate "$o".
_:bn_198 fno:predicate "$s".
_:bn_200 fno:predicate "$o".
_:bn_204 fno:predicate "$s".
_:bn_205 fno:predicate "$s.i".
_:bn_207 fno:predicate "$o".
_:bn_210 fno:predicate "$s".
_:bn_211 fno:predicate "$s.1".
_:bn_213 fno:predicate "$s.2".
_:bn_215 fno:predicate "$o".
_:bn_218 fno:predicate "$s".
_:bn_219 fno:predicate "$s.1".
_:bn_220 fno:predicate "$s.2".
_:bn_221 fno:predicate "$o".
_:bn_223 fno:predicate "$s".
_:bn_225 fno:predicate "$o".
_:bn_227 fno:predicate "$s".
_:bn_229 fno:predicate "$o".
_:bn_232 fno:predicate "$s".
_:bn_234 fno:predicate "$o".
_:bn_237 fno:predicate "$s".
_:bn_238 fno:predicate "$s.i".
_:bn_240 fno:predicate "$o".
_:bn_243 fno:predicate "$s".
_:bn_245 fno:predicate "$o".
_:bn_248 fno:predicate "$s".
_:bn_250 fno:predicate "$o".
_:bn_253 fno:predicate "$s".
_:bn_254 fno:predicate "$s.i".
_:bn_255 fno:predicate "$o".
_:bn_257 fno:predicate "$s".
_:bn_258 fno:predicate "$o".
_:bn_260 fno:predicate "$s".
_:bn_261 fno:predicate "$o".
_:bn_263 fno:predicate "$s".
_:bn_264 fno:predicate "$o".
_:bn_266 fno:predicate "$s".
_:bn_267 fno:predicate "$o".
_:bn_269 fno:predicate "$s".
_:bn_270 fno:predicate "$s.i".
_:bn_271 fno:predicate "$o".
_:bn_273 fno:predicate "$s".
_:bn_274 fno:predicate "$o".
_:bn_276 fno:predicate "$s".
_:bn_277 fno:predicate "$o".
_:bn_279 fno:predicate "$s".
_:bn_280 fno:predicate "$o".
_:bn_282 fno:predicate "$s".
_:bn_283 fno:predicate "$o".
_:bn_285 fno:predicate "$s".
_:bn_286 fno:predicate "$o".
_:bn_288 fno:predicate "$s".
_:bn_289 fno:predicate "$o".
_:bn_291 fno:predicate "$s".
_:bn_292 fno:predicate "$o".
_:bn_294 fno:predicate "$s".
_:bn_295 fno:predicate "$s.1".
_:bn_296 fno:predicate "$s.2".
_:bn_297 fno:predicate "$s.3".
_:bn_298 fno:predicate "$o".
_:bn_300 fno:predicate "$s".
_:bn_301 fno:predicate "$s.1".
_:bn_302 fno:predicate "$s.2".
_:bn_303 fno:predicate "$o".
_:bn_305 fno:predicate "$s".
_:bn_306 fno:predicate "$o".
_:bn_308 fno:predicate "$s".
_:bn_309 fno:predicate "$o".
_:bn_311 fno:predicate "$s".
_:bn_312 fno:predicate "$o".
_:bn_314 fno:predicate "$s".
_:bn_315 fno:predicate "$o".
_:bn_317 fno:predicate "$s".
_:bn_318 fno:predicate "$o".
_:bn_320 fno:predicate "$s".
_:bn_321 fno:predicate "$o".
_:bn_323 fno:predicate "$s".
_:bn_324 fno:predicate "$o".
_:bn_2 fnon:position fnon:subject.
_:bn_3 fnon:position fnon:object.
_:bn_8 fnon:position fnon:subject.
_:bn_10 fnon:position fnon:object.
_:bn_12 fnon:position fnon:subject.
_:bn_13 fnon:position fnon:object.
_:bn_16 fnon:position fnon:subject.
_:bn_17 fnon:position fnon:object.
_:bn_21 fnon:position fnon:subject.
_:bn_22 fnon:position fnon:object.
_:bn_27 fnon:position fnon:subject.
_:bn_28 fnon:position fnon:object.
_:bn_30 fnon:position fnon:subject.
_:bn_31 fnon:position fnon:object.
_:bn_34 fnon:position fnon:subject.
_:bn_35 fnon:position fnon:object.
_:bn_38 fnon:position fnon:subject.
_:bn_41 fnon:position fnon:object.
_:bn_43 fnon:position fnon:subject.
_:bn_46 fnon:position fnon:object.
_:bn_48 fnon:position fnon:subject.
_:bn_49 fnon:position fnon:object.
_:bn_51 fnon:position fnon:subject.
_:bn_53 fnon:position fnon:object.
_:bn_55 fnon:position fnon:subject.
_:bn_56 fnon:position fnon:object.
_:bn_59 fnon:position fnon:subject.
_:bn_62 fnon:position fnon:object.
_:bn_68 fnon:position fnon:subject.
_:bn_69 fnon:position fnon:object.
_:bn_71 fnon:position fnon:subject.
_:bn_74 fnon:position fnon:object.
_:bn_76 fnon:position fnon:subject.
_:bn_77 fnon:position fnon:object.
_:bn_81 fnon:position fnon:subject.
_:bn_82 fnon:position fnon:object.
_:bn_85 fnon:position fnon:subject.
_:bn_86 fnon:position fnon:object.
_:bn_88 fnon:position fnon:subject.
_:bn_89 fnon:position fnon:object.
_:bn_91 fnon:position fnon:subject.
_:bn_92 fnon:position fnon:object.
_:bn_96 fnon:position fnon:subject.
_:bn_97 fnon:position fnon:object.
_:bn_99 fnon:position fnon:subject.
_:bn_100 fnon:position fnon:object.
_:bn_102 fnon:position fnon:subject.
_:bn_103 fnon:position fnon:object.
_:bn_105 fnon:position fnon:subject.
_:bn_106 fnon:position fnon:object.
_:bn_108 fnon:position fnon:subject.
_:bn_109 fnon:position fnon:object.
_:bn_111 fnon:position fnon:subject.
_:bn_114 fnon:position fnon:object.
_:bn_116 fnon:position fnon:subject.
_:bn_118 fnon:position fnon:object.
_:bn_121 fnon:position fnon:subject.
_:bn_123 fnon:position fnon:object.
_:bn_126 fnon:position fnon:subject.
_:bn_128 fnon:position fnon:object.
_:bn_131 fnon:position fnon:subject.
_:bn_133 fnon:position fnon:object.
_:bn_136 fnon:position fnon:subject.
_:bn_138 fnon:position fnon:object.
_:bn_141 fnon:position fnon:subject.
_:bn_143 fnon:position fnon:object.
_:bn_146 fnon:position fnon:subject.
_:bn_148 fnon:position fnon:object.
_:bn_151 fnon:position fnon:subject.
_:bn_156 fnon:position fnon:object.
_:bn_159 fnon:position fnon:subject.
_:bn_161 fnon:position fnon:object.
_:bn_165 fnon:position fnon:subject.
_:bn_170 fnon:position fnon:object.
_:bn_173 fnon:position fnon:subject.
_:bn_175 fnon:position fnon:object.
_:bn_178 fnon:position fnon:subject.
_:bn_180 fnon:position fnon:object.
_:bn_183 fnon:position fnon:subject.
_:bn_185 fnon:position fnon:object.
_:bn_188 fnon:position fnon:subject.
_:bn_190 fnon:position fnon:object.
_:bn_193 fnon:position fnon:subject.
_:bn_195 fnon:position fnon:object.
_:bn_198 fnon:position fnon:subject.
_:bn_200 fnon:position fnon:object.
_:bn_204 fnon:position fnon:subject.
_:bn_207 fnon:position fnon:object.
_:bn_210 fnon:position fnon:subject.
_:bn_215 fnon:position fnon:object.
_:bn_218 fnon:position fnon:subject.
_:bn_221 fnon:position fnon:object.
_:bn_223 fnon:position fnon:subject.
_:bn_225 fnon:position fnon:object.
_:bn_227 fnon:position fnon:subject.
_:bn_229 fnon:position fnon:object.
_:bn_232 fnon:position fnon:subject.
_:bn_234 fnon:position fnon:object.
_:bn_237 fnon:position fnon:subject.
_:bn_240 fnon:position fnon:object.
_:bn_243 fnon:position fnon:subject.
_:bn_245 fnon:position fnon:object.
_:bn_248 fnon:position fnon:subject.
_:bn_250 fnon:position fnon:object.
_:bn_253 fnon:position fnon:subject.
_:bn_255 fnon:position fnon:object.
_:bn_257 fnon:position fnon:subject.
_:bn_258 fnon:position fnon:object.
_:bn_260 fnon:position fnon:subject.
_:bn_261 fnon:position fnon:object.
_:bn_263 fnon:position fnon:subject.
_:bn_264 fnon:position fnon:object.
_:bn_266 fnon:position fnon:subject.
_:bn_267 fnon:position fnon:object.
_:bn_269 fnon:position fnon:subject.
_:bn_271 fnon:position fnon:object.
_:bn_273 fnon:position fnon:subject.
_:bn_274 fnon:position fnon:object.
_:bn_276 fnon:position fnon:subject.
_:bn_277 fnon:position fnon:object.
_:bn_279 fnon:position fnon:subject.
_:bn_280 fnon:position fnon:object.
_:bn_282 fnon:position fnon:subject.
_:bn_283 fnon:position fnon:object.
_:bn_285 fnon:position fnon:subject.
_:bn_286 fnon:position fnon:object.
_:bn_288 fnon:position fnon:subject.
_:bn_289 fnon:position fnon:object.
_:bn_291 fnon:position fnon:subject.
_:bn_292 fnon:position fnon:object.
_:bn_294 fnon:position fnon:subject.
_:bn_298 fnon:position fnon:object.
_:bn_300 fnon:position fnon:subject.
_:bn_303 fnon:position fnon:object.
_:bn_305 fnon:position fnon:subject.
_:bn_306 fnon:position fnon:object.
_:bn_308 fnon:position fnon:subject.
_:bn_309 fnon:position fnon:object.
_:bn_311 fnon:position fnon:subject.
_:bn_312 fnon:position fnon:object.
_:bn_314 fnon:position fnon:subject.
_:bn_315 fnon:position fnon:object.
_:bn_317 fnon:position fnon:subject.
_:bn_318 fnon:position fnon:object.
_:bn_320 fnon:position fnon:subject.
_:bn_321 fnon:position fnon:object.
_:bn_323 fnon:position fnon:subject.
_:bn_324 fnon:position fnon:object.
list:append rdfs:seeAlso list:remove.
_:bn_4 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/append.n3>.
_:bn_5 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/append.n3>.
_:bn_6 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/append.n3>.
_:bn_7 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/append.n3>.
list:first rdfs:seeAlso list:last.
_:bn_11 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/first.n3>.
list:in rdfs:seeAlso list:member.
_:bn_14 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/in.n3>.
_:bn_15 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/in.n3>.
_:bn_18 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/iterate.n3>.
_:bn_19 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/iterate.n3>.
_:bn_20 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/iterate.n3>.
list:last rdfs:seeAlso list:first.
_:bn_25 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/last.n3>.
_:bn_26 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/last.n3>.
_:bn_29 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/length.n3>.
list:member rdfs:seeAlso list:in.
list:member rdfs:seeAlso list:memberAt.
_:bn_32 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/member.n3>.
_:bn_33 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/member.n3>.
_:bn_36 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/memberAt.n3>.
_:bn_37 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/memberAt.n3>.
list:remove rdfs:seeAlso list:append.
_:bn_42 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/list/remove.n3>.
_:bn_47 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/conclusion.n3>.
_:bn_50 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/conjunction.n3>.
_:bn_54 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/content.n3>.
log:dtlit rdfs:seeAlso log:langlit.
_:bn_57 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/dtlit.n3>.
_:bn_58 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/dtlit.n3>.
log:equalTo rdfs:seeAlso log:notEqualTo.
_:bn_63 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/equalTo.n3>.
_:bn_64 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/equalTo.n3>.
_:bn_65 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/equalTo.n3>.
_:bn_66 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/equalTo.n3>.
_:bn_67 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/equalTo.n3>.
_:bn_70 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/forAllIn.n3>.
log:includes rdfs:seeAlso log:notIncludes.
_:bn_75 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/includes.n3>.
log:notEqualTo rdfs:seeAlso log:equalTo.
_:bn_78 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/notEqualTo.n3>.
_:bn_79 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/notEqualTo.n3>.
_:bn_80 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/notEqualTo.n3>.
log:notIncludes rdfs:seeAlso log:includes.
_:bn_83 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/notIncludes.n3>.
_:bn_84 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/notIncludes.n3>.
_:bn_87 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/outputString.n3>.
_:bn_90 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/parsedAsN3.n3>.
log:parsedAsN3 rdfs:seeAlso log:semantics.
_:bn_93 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/rawType.n3>.
_:bn_94 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/rawType.n3>.
_:bn_95 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/rawType.n3>.
_:bn_98 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/semantics.n3>.
_:bn_101 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/semanticsOrError.n3>.
_:bn_104 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/skolem.n3>.
_:bn_107 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/uri.n3>.
log:langlit rdfs:seeAlso log:dtlit.
_:bn_110 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/log/langlit.n3>.
_:bn_115 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/absoluteValue.n3>.
math:acos rdfs:seeAlso math:cos.
math:acos rdfs:seeAlso math:cosh.
_:bn_120 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/acos.n3>.
math:asin rdfs:seeAlso math:sin.
math:asin rdfs:seeAlso math:sinh.
_:bn_125 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/asin.n3>.
math:atan rdfs:seeAlso math:tan.
math:atan rdfs:seeAlso math:tanh.
_:bn_130 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/atan.n3>.
math:cos rdfs:seeAlso math:acos.
math:cos rdfs:seeAlso math:cosh.
_:bn_135 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/cos.n3>.
math:cosh rdfs:seeAlso math:cos.
math:cosh rdfs:seeAlso math:acos.
_:bn_140 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/cosh.n3>.
_:bn_145 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/degrees.n3>.
_:bn_150 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/difference.n3>.
math:equalTo rdfs:seeAlso math:notEqualTo.
_:bn_158 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/equalTo.n3>.
_:bn_163 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/exponentiation.n3>.
_:bn_164 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/exponentiation.n3>.
math:greaterThan rdfs:seeAlso math:notGreaterThan.
_:bn_172 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/greaterThan.n3>.
math:lessThan rdfs:seeAlso math:notLessThan.
_:bn_177 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/lessThan.n3>.
_:bn_182 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/negation.n3>.
math:notEqualTo rdfs:seeAlso math:equalTo.
_:bn_187 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/notEqualTo.n3>.
math:notGreaterThan rdfs:seeAlso math:greaterThan.
_:bn_192 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/notGreaterThan.n3>.
math:notLessThan rdfs:seeAlso math:lessThan.
_:bn_197 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/notLessThan.n3>.
_:bn_202 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/product.n3>.
_:bn_203 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/product.n3>.
_:bn_209 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/quotient.n3>.
_:bn_217 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/remainder.n3>.
_:bn_222 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/rounded.n3>.
math:sin rdfs:seeAlso math:asin.
math:sin rdfs:seeAlso math:sinh.
_:bn_226 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/sin.n3>.
math:sinh rdfs:seeAlso math:asin.
math:sinh rdfs:seeAlso math:sin.
_:bn_231 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/sinh.n3>.
_:bn_236 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/sum.n3>.
math:tan rdfs:seeAlso math:atan.
math:tan rdfs:seeAlso math:tanh.
_:bn_242 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/tan.n3>.
math:tanh rdfs:seeAlso math:tan.
math:tanh rdfs:seeAlso math:atan.
_:bn_247 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/math/tanh.n3>.
_:bn_252 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/concatenation.n3>.
_:bn_256 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/contains.n3>.
string:contains rdfs:seeAlso string:containsIgnoringCase.
_:bn_259 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/containsIgnoringCase.n3>.
string:containsIgnoringCase rdfs:seeAlso string:contains.
_:bn_262 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/endsWith.n3>.
_:bn_265 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/equalIgnoringCase.n3>.
_:bn_268 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/format.n3>.
_:bn_272 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/greaterThan.n3>.
string:greaterThan rdfs:seeAlso string:notGreaterThan.
_:bn_275 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/lessThan.n3>.
string:lessThan rdfs:seeAlso string:notLessThan.
_:bn_278 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/matches.n3>.
string:matches rdfs:seeAlso string:notMatches.
_:bn_281 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/notEqualIgnoringCase.n3>.
_:bn_284 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/notGreaterThan.n3>.
string:notGreaterThan rdfs:seeAlso string:greaterThan.
_:bn_287 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/notLessThan.n3>.
string:notLessThan rdfs:seeAlso string:lessThan.
_:bn_290 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/notMatches.n3>.
string:notMatches rdfs:seeAlso string:matches.
_:bn_293 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/replace.n3>.
_:bn_299 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/scrape.n3>.
_:bn_304 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/string/startsWith.n3>.
_:bn_307 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/time/day.n3>.
_:bn_310 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/time/minute.n3>.
_:bn_313 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/time/month.n3>.
_:bn_316 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/time/second.n3>.
_:bn_319 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/time/timeZone.n3>.
_:bn_322 rdfs:seeAlso <file:///home/domel/n3builtins/n3buildins/spec/src/time/year.n3>.
_:bn_8 fno:type rdf:List.
_:bn_9 fno:type rdf:List.
_:bn_10 fno:type rdf:List.
_:bn_12 fno:type rdf:List.
_:bn_17 fno:type rdf:List.
_:bn_21 fno:type rdf:List.
_:bn_22 fno:type rdf:List.
_:bn_23 fno:type xsd:integer.
_:bn_27 fno:type rdf:List.
_:bn_30 fno:type rdf:List.
_:bn_34 fno:type rdf:List.
_:bn_38 fno:type rdf:List.
_:bn_39 fno:type rdf:List.
_:bn_40 fno:type xsd:integer.
_:bn_43 fno:type rdf:List.
_:bn_44 fno:type rdf:List.
_:bn_48 fno:type log:Formula.
_:bn_49 fno:type log:Formula.
_:bn_51 fno:type rdf:List.
_:bn_52 fno:type log:Formula.
_:bn_53 fno:type log:Formula.
_:bn_55 fno:type log:Uri.
_:bn_56 fno:type xsd:string.
_:bn_59 fno:type rdf:List.
_:bn_60 fno:type xsd:string.
_:bn_61 fno:type log:Uri.
_:bn_62 fno:type log:Literal.
_:bn_71 fno:type rdf:List.
_:bn_72 fno:type log:Formula.
_:bn_73 fno:type log:Formula.
_:bn_76 fno:type log:Formula.
_:bn_77 fno:type log:Formula.
_:bn_85 fno:type log:Formula.
_:bn_86 fno:type log:Formula.
_:bn_89 fno:type xsd:string.
_:bn_91 fno:type xsd:string.
_:bn_92 fno:type log:Formula.
_:bn_97 fno:type log:Uri.
_:bn_99 fno:type log:Uri.
_:bn_100 fno:type log:Formula.
_:bn_102 fno:type log:Uri.
_:bn_109 fno:type xsd:string.
_:bn_111 fno:type rdf:List.
_:bn_112 fno:type xsd:string.
_:bn_113 fno:type xsd:string.
_:bn_114 fno:type log:Literal.
_:bn_116 fno:type _:bn_117.
_:bn_118 fno:type _:bn_119.
_:bn_121 fno:type _:bn_122.
_:bn_123 fno:type _:bn_124.
_:bn_126 fno:type _:bn_127.
_:bn_128 fno:type _:bn_129.
_:bn_131 fno:type _:bn_132.
_:bn_133 fno:type _:bn_134.
_:bn_136 fno:type _:bn_137.
_:bn_138 fno:type _:bn_139.
_:bn_141 fno:type _:bn_142.
_:bn_143 fno:type _:bn_144.
_:bn_146 fno:type _:bn_147.
_:bn_148 fno:type _:bn_149.
_:bn_151 fno:type rdf:List.
_:bn_152 fno:type _:bn_153.
_:bn_154 fno:type _:bn_155.
_:bn_156 fno:type _:bn_157.
_:bn_159 fno:type _:bn_160.
_:bn_161 fno:type _:bn_162.
_:bn_165 fno:type rdf:List.
_:bn_166 fno:type _:bn_167.
_:bn_168 fno:type _:bn_169.
_:bn_170 fno:type _:bn_171.
_:bn_173 fno:type _:bn_174.
_:bn_175 fno:type _:bn_176.
_:bn_178 fno:type _:bn_179.
_:bn_180 fno:type _:bn_181.
_:bn_183 fno:type _:bn_184.
_:bn_185 fno:type _:bn_186.
_:bn_188 fno:type _:bn_189.
_:bn_190 fno:type _:bn_191.
_:bn_193 fno:type _:bn_194.
_:bn_195 fno:type _:bn_196.
_:bn_198 fno:type _:bn_199.
_:bn_200 fno:type _:bn_201.
_:bn_204 fno:type rdf:List.
_:bn_205 fno:type _:bn_206.
_:bn_207 fno:type _:bn_208.
_:bn_210 fno:type rdf:List.
_:bn_211 fno:type _:bn_212.
_:bn_213 fno:type _:bn_214.
_:bn_215 fno:type _:bn_216.
_:bn_218 fno:type rdf:List.
_:bn_219 fno:type xsd:integer.
_:bn_220 fno:type xsd:integer.
_:bn_221 fno:type xsd:integer.
_:bn_223 fno:type _:bn_224.
_:bn_225 fno:type xsd:integer.
_:bn_227 fno:type _:bn_228.
_:bn_229 fno:type _:bn_230.
_:bn_232 fno:type _:bn_233.
_:bn_234 fno:type _:bn_235.
_:bn_237 fno:type rdf:List.
_:bn_238 fno:type _:bn_239.
_:bn_240 fno:type _:bn_241.
_:bn_243 fno:type _:bn_244.
_:bn_245 fno:type _:bn_246.
_:bn_248 fno:type _:bn_249.
_:bn_250 fno:type _:bn_251.
_:bn_253 fno:type rdf:List.
_:bn_254 fno:type xsd:string.
_:bn_255 fno:type xsd:string.
_:bn_257 fno:type xsd:string.
_:bn_258 fno:type xsd:string.
_:bn_260 fno:type xsd:string.
_:bn_261 fno:type xsd:string.
_:bn_263 fno:type xsd:string.
_:bn_264 fno:type xsd:string.
_:bn_266 fno:type xsd:string.
_:bn_267 fno:type xsd:string.
_:bn_269 fno:type rdf:List.
_:bn_270 fno:type xsd:string.
_:bn_271 fno:type xsd:string.
_:bn_273 fno:type xsd:string.
_:bn_274 fno:type xsd:string.
_:bn_276 fno:type xsd:string.
_:bn_277 fno:type xsd:string.
_:bn_279 fno:type xsd:string.
_:bn_280 fno:type xsd:string.
_:bn_282 fno:type xsd:string.
_:bn_283 fno:type xsd:string.
_:bn_285 fno:type xsd:string.
_:bn_286 fno:type xsd:string.
_:bn_288 fno:type xsd:string.
_:bn_289 fno:type xsd:string.
_:bn_291 fno:type xsd:string.
_:bn_292 fno:type xsd:string.
_:bn_294 fno:type rdf:List.
_:bn_295 fno:type xsd:string.
_:bn_296 fno:type xsd:string.
_:bn_297 fno:type xsd:string.
_:bn_298 fno:type xsd:string.
_:bn_300 fno:type rdf:List.
_:bn_301 fno:type xsd:string.
_:bn_302 fno:type xsd:string.
_:bn_303 fno:type xsd:string.
_:bn_305 fno:type xsd:string.
_:bn_306 fno:type xsd:string.
_:bn_308 fno:type xsd:dateTime.
_:bn_309 fno:type xsd:integer.
_:bn_311 fno:type xsd:dateTime.
_:bn_312 fno:type xsd:integer.
_:bn_314 fno:type xsd:dateTime.
_:bn_315 fno:type xsd:integer.
_:bn_317 fno:type xsd:dateTime.
_:bn_318 fno:type xsd:integer.
_:bn_320 fno:type xsd:dateTime.
_:bn_321 fno:type xsd:string.
_:bn_323 fno:type xsd:dateTime.
_:bn_324 fno:type xsd:integer.
_:bn_8 fnon:listElementType _:bn_9.
_:bn_51 fnon:listElementType _:bn_52.
_:bn_204 fnon:listElementType _:bn_205.
_:bn_237 fnon:listElementType _:bn_238.
_:bn_253 fnon:listElementType _:bn_254.
_:bn_269 fnon:listElementType _:bn_270.
_:bn_22 fnon:listElements (_:bn_23 _:bn_24).
_:bn_38 fnon:listElements (_:bn_39 _:bn_40).
_:bn_43 fnon:listElements (_:bn_44 _:bn_45).
_:bn_59 fnon:listElements (_:bn_60 _:bn_61).
_:bn_71 fnon:listElements (_:bn_72 _:bn_73).
_:bn_111 fnon:listElements (_:bn_112 _:bn_113).
_:bn_151 fnon:listElements (_:bn_152 _:bn_154).
_:bn_165 fnon:listElements (_:bn_166 _:bn_168).
_:bn_210 fnon:listElements (_:bn_211 _:bn_213).
_:bn_218 fnon:listElements (_:bn_219 _:bn_220).
_:bn_294 fnon:listElements (_:bn_295 _:bn_296 _:bn_297).
_:bn_300 fnon:listElements (_:bn_301 _:bn_302).
list:memberAt vs:moreinfo "The dcterms:description seems wrong. Jen, eye nor eye support the negative index. Only eye supports the s_2 variable (@phochste).\nFixed the description (@william-vw).".
list:remove vs:moreinfo "The dcterms:description is wrong. Eye, jen3 nor cwm don't implement list:remove this way. (@phochste)\nFixed the description and removed the non-functional example (@william-vw)".
log:conclusion vs:moreinfo "Example below not working in eye (works in jen3) (@william-vw)".
log:notEqualTo vs:moreinfo "the results are surprising when using unbound variables (phochste)".
log:notEqualTo vs:moreinfo "?x log:notEqualTo 'Cat' is semantically not false, it has infinite amount of results (phochste)".
log:notEqualTo vs:moreinfo "we make it into false because in N3 there is no way, yet, to express a result with infinite results (phochste)".
log:notEqualTo vs:moreinfo "we need to document that unbound variables are automatic false. (phochste)".
log:notEqualTo vs:moreinfo "this makes notEqualTo not the exact complement of equalTo. (phochste)".
math:acos vs:moreinfo "is acos not just syntactic sugar for cos, eye, jen3 and cwm can use cos in both directions @phochste".
math:asin vs:moreinfo "is asin not just syntactic sugar for cos, eye, jen3 and cwm can use sin in both directions @phochste".
math:atan vs:moreinfo "is atan not just syntactic sugar for tan, eye, jen3 and cwm can use sin in both directions @phochste".
math:difference vs:moreinfo "it is unclear for me why difference can't know the answer to (3 ?what) math:difference 1 @phochste".
math:product vs:moreinfo "it is unclear for me why exponentiation can work in reverse, but product can't be used to calculate quotients @phochste".
math:quotient vs:moreinfo "it is unclear for me why exponentiation can work in reverse, but quotient can't be used to calculate products @phochste".
math:sum vs:moreinfo "it is unclear for me why sum can't know the answer to (1 ?what) math:sum 2 @phochste".
log:semantics fnon:details "The log:semantics of a document is the formula achieved by parsing the representation of the document.\nFor a document in Notation3, `log:semantics` is the `log:parsedAsN3` of the `log:content` of the document.\nFor a document in another RDF syntax, it is parsed according to the appropriate specification to yield an RDF formula (a subclass of N3 `log:Formula`).\nEvaluates to `false` if an unrecognized document format is retrieved.\nAside: Philosophers will be distracted here into worrying about the meaning of meaning. At least we didn't call this function \"meaning\"! \nIn as much as N3 is used as an interlingua for interoperability for different systems, this for an N3 based system is the meaning expressed by a document.\nRelated: see `log:parsedAsN3` and `log:content`.".
log:uri fnon:details "This allows one to look at the actual string of the URI which identifies this.\nThis is a level breaker, breaking the rule of not looking inside a URI.".
_:bn_117 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_119 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_122 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_124 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_127 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_129 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_132 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_134 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_137 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_139 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_142 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_144 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_147 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_149 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_153 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_155 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_157 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_160 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_162 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_167 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_169 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_171 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_174 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_176 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_179 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_181 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_184 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_186 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_189 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_191 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_194 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_196 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_199 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_201 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_206 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_208 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_212 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_214 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_216 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_224 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_228 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_230 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_233 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_235 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_239 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_241 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_244 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_246 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_249 owl:unionOf (xsd:decimal xsd:double xsd:float).
_:bn_251 owl:unionOf (xsd:decimal xsd:double xsd:float).

